<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

	
<style>
	#dmIcon {
	 line-height: 35px;
	 color: #F86D72;
	 position: fixed;
	 height:45px;
	 right: 70px;
	 bottom: 12px;
	 display: inline-flex;
	 align-items: center;
	 background: floralwhite;
	 border-radius: 50px;
	 padding: 3px 20px;
	 box-shadow: 0 2px 6px rgba(0,0,0,0.1);
	 font-family: sans-serif;
	 font-weight: bold;
	 border: 1px solid #e5e7eb;
	 z-index: 10;
	 cursor: pointer;
   }
   #dmList {
	   position: fixed;
	   overflow: hidden;
	   width:0;
	   height:0;
	   right: 70px;
	   bottom:11px;
	   background-color: white;
	   z-index: 5;
	   border-radius: 10px;
	   border: 1px solid #e5e7eb;
	   text-align: center;
	   color: #F86D72; 
	   transition: width 0.3s ease, height 0.3s ease;
   } 

   .dmIcon-circle {
	 width: 24px;
	 height: 24px;
	 background-color: #F86D72;
	 border-radius: 50%;
	 display: flex;
	 align-items: center;
	 justify-content: center;
	 margin-right: 8px;
   }
   .dmIcon-circle svg {
	 width: 14px;
	 height: 14px;
	 fill: white;
   }
   .dmIcon-text {
	 margin-right: 6px;
	 color: #F86D72;
   }



  .artist-name_dm {
    margin-top: 8px;
    font-size: 0.9rem;
    font-weight: 500;
  }

  .badge-icon_dm {
    position: absolute;
    bottom: 5px;
    right: 5px;
    background: white;
    border-radius: 50%;
    padding: 3px;
    width: 20px;
    height: 20px;
  }

  .filter-buttons {
    overflow-x: auto;
    white-space: nowrap;
  }

  .filter-buttons::-webkit-scrollbar {
    display: none;
  }
  .tab{
		position: absolute;
		background-color: white;
	}

.artist-group_dm {
	margin-bottom: 30px;
}
.group-name_dm {
	font-size: 1.2em;
	font-weight: bold;
	color: #181818;
	margin-bottom: 10px;
	text-align: left;
}
.artist-list_dm {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
	list-style: none;
	padding: 0;
}
#dmnotice li{
	font-size: 12px;
	color: rgba(165, 165, 165, 0.701);
}


</style>
</head>
<body>
	<c:if test="${not empty userVO}">
	</c:if>
	<div>
		<c:if test="${not empty userVO}">
			<div class="dm-button" id="dmIcon"  onclick="toggleDm()">
		</c:if>
		<c:if test="${empty userVO}">
			<div class="dm-button" id="dmIcon"  onclick="alert('로그인 후 이용가능한 서비스입니다')">
		</c:if>
            <div class="dmIcon-circle">
            <svg viewBox="0 0 24 24">
                <path d="M2 21l21-9L2 3v7l15 2-15 2v7z"/>
            </svg>
            </div>
            <div class="dmIcon-text"> Message</div>
        </div>
	</div>

	<!-- dm List-->
	<div id="dmList" class="card p-3">
		<div class="d-flex">
			<div class="d-flex flex-column align-items-center me-3"  style="position: sticky; top: 0; ">
				<a href="#" data-dm-num="0" onclick="subscribeSideTab(this)"><i class="bi bi-person-add" style="cursor:pointer; font-size: 1.8rem;"></i></i></a>
				<a href="#" data-dm-num="1" onclick="msgSideTab(this)" class="mt-2"><i class="bi bi-chat-heart" style="cursor:pointer; font-size: 1.8rem;"></i></a>
			</div>
	
			<div class=" d-flex align-items-normal gap-3 flex-wrap ">
				
				<div class="tab" id="subscribeMainTab" style="z-index:20; width: 90%;display: block;">
					<div class="row" style="position: sticky; top: 0; background-color: white;">
						<div class="col-md-3" onclick="myArtist()" style="cursor:pointer;"><h5 id="myArtistText"><b>나의 아티스트</b></h5></div> 
						<div class="col-md-3" onclick="recArtist()" style="cursor:pointer;"><h5 id="recArtistText"><b>추천 아티스트</b></h5></div>
						<div class="col-md-5" id="dmsearchToggle" style="text-align: end; ">
							<!-- 검색 입력창 -->
							<div class="custom-search-wrapper" id="dmsearchBox" style="display: none; position: relative; width: 260px; padding: 1px 6px;">
								<input type="text" id="dmsearchInput" class="custom-search-input" autofocus placeholder="검색어 입력" />
								<button class="clear-btn" id="dmclearSearch" type="button">
									<i class="bi bi-x-lg"></i>
								</button>
								<div id="dmsearchResults" class="dropdown-menu show p-0" style="position: absolute; top: 45px; left: 0; width: 100%; display: none; z-index: 999;">
									<!-- 결과 리스트 출력 div -->
								</div>
							</div>
							<div id="dmsearchIcon" style="cursor: pointer;"><h4><i class="bi bi-search "></i></h4></div>
						</div>
						<div class="col-md-1" style="text-align: end;" onclick="toggleDm()"><h4><i class="bi bi-chevron-bar-down" style="margin-right: 8px;"></i></h4></div>
					</div>
					<div>
						<div id="artistListDm" style="background-color: white; height: 630px; padding-left: 15px; overflow-y:auto; " ></div>
					</div>
				</div>

				<!-- // 채팅 탭 // -->
				<div class="tab" id="msgMainTab" style="width: 90%; display: none;">
					<div class="row" style="position: sticky; top: 0; background-color: white;">
					  <div class="col-md-10 d-flex align-items-start"><h5><b>메세지</b></h5></div> 
					  <div class="col-md-1"></div>
					  <div class="col-md-1" style="text-align: end;" onclick="toggleDm()">
						<h4><i class="bi bi-chevron-bar-down" style="margin-right: 8px;"></i></h4>
					  </div>
					</div>
				  
					<div style="background-color: white; height: 630px; display: flex; border: 1px solid #ccc; border-radius: 5px;">
						<!-- 왼쪽 박스 -->
						<div id="chatRoomList" style="flex: 1; border-right:  3px solid #90ee90; margin: 5px;">
					
						</div>
					
						<!-- 오른쪽 박스 -->
						<div style="flex: 5; margin: 5px;" id="chatRoom">
							<b id="startDmInfo"><h3 style=" padding-top:30px;"><i class="bi bi-arrow-left-square"></i></h3> <h5>대화를 시작할 아티스트를 선택하세요</h5></b>
						</div>
					</div>
				</div>


			</div>
		</div>
	</div>

	<!-- dm 구독권 결제 -->
	<div class="modal" id="buyDmModal">
		<div class="modal-dialog modal-dialog-centered">
		  <div class="modal-content" style="width: 450px;">
			<form method="post" action="/shop/ordersPost">
				<!-- Modal body -->
				<div class="modal-body">
					<input type="hidden" id="dmArtNoModal" name="goodsVOList[0].option2">
					<input type="hidden" id="dmGdsFileModal" name="goodsVOList[0].fileSavePath">
					<input type="hidden" id="dmGdsNmModal" name="goodsVOList[0].commCodeGrpNo">
					<input type="hidden"  name="goodsVOList[0].gdsNm" value="DM 월 구독권">
					<input type="hidden"  name="goodsVOList[0].gdsNo" value="98">
					<input type="hidden"  name="goodsVOList[0].qty" value="1">
					<input type="hidden"  name="goodsVOList[0].unitPrice" value="8000">
					<input type="hidden"  name="goodsVOList[0].amount" value="8000">
					<input type="hidden"  name="goodsVOList[0].gramt" value="8000">
					<div style="text-align: center; margin-bottom: 20px;">
						<img id="dmArtImgModal" src="" width="150" height="150" style="border-radius:50%;">
					</div>
					<div style="text-align: center;">
						<b id="dmArtActNmModal" style="margin-bottom: 10px;"></b><p>8,000원/30일</p>
					</div>
					<div id="dmnotice">
						<ul style="font-size: 12px; color:rgb(19, 19, 19); padding: 0; margin-bottom: 10px;">유의사항</ul>
						<li>OHoT DM을 구독하면 아래의 유의사항을 모두 읽고 동의한 것으로 간주합니다.</li>
						<li>구독 기간 동안 아티스트의 메시지를 수신하고, 아티스트에게 메시지를 보낼 수 있습니다.</li>
						<li> 이용권을 구매한 시점부터 매 24시간 경과 시 구독 기간 1일이 소진됩니다.</li>
						<li>아티스트의 메시지는 비정기적으로 발송되며, 구독 기간 내 메시지 발송 횟수는 보장되지 않습니다.(서비스 오류 외, 메시지 미수신을 사유로 한 환불은 불가합니다.)</li>
						<li>아티스트가 전송한 메시지 또는 콘텐츠는 DM 구독자에게 독점으로 제공됩니다. 관련 메시지 또는 콘텐츠를 OHoT 동의 없이 외부에 전송, 게시하는 경우 서비스 이용에 제재를 받거나 법적 책임을 질 수 있습니다.</li>
						<li>[청약 철회] 이용권 결제 후 7일 이내, 서비스 이용이 시작되지 않은 경우 환급 가능합니다.</li>
						<li>서비스 이용, 결제/환불에 관한 더 자세한 내용은 고객센터를 참고해 주시기 바랍니다.</li>
						<li>본 유의사항에서 정하지 않은 사항은 OHoT 서비스 이용약관 및 유료서비스 이용약관의 내용에 따릅니다. (*이용약관 및 유료서비스 이용약관: OHoT 설정 > 서비스 정보 및 약관 > 이용약관 및 유료서비스 이용약관)</li>
					</div>
				</div>
				
				<!-- Modal footer -->
				<div class="modal-footer">
					<button type="button" class="btn btn-danger" data-bs-dismiss="modal">취소</button>
					<button type="submit" class="btn btn-primary" >구독하기</button>
				</div>
			</form>
		  </div>
		</div>
	</div>
	  

<script type="text/javascript">
const dmTabs =document.querySelectorAll(".tab");
const memNoDm = '${userVO.memberVO.memNo}';
let stompClient = null;

let isDmOpen = false;

function toggleDm() {
	if (isDmOpen) {
		// 닫기
		dmList.style.width = "0px";
		dmList.style.height = "0px";
		document.querySelector('#dmIcon').style.zIndex = 10;
		isDmOpen = false;
		const closeClearDm =document.querySelector('#chatRoom').innerHTML=`
			<b id="startDmInfo"><h3 style=" padding-top:30px;"><i class="bi bi-arrow-left-square"></i></h3> <h5>대화를 시작할 아티스트를 선택하세요</h5></b>`;


		stompClient.disconnect(function(){
			console.log("채팅방 떠남")
		})

	} else {
		// 열기
		dmList.style.width = "700px";
		dmList.style.height = "700px";
		document.querySelector('#dmIcon').style.zIndex = 3;

		console.log("로그인했음:", '${not empty userVO.memberVO.memNo}');
		if (memNoDm!=0 || memNoDm!=null|| memNoDm!="") {
			myArtist();
		} else{
			recArtist();
		}

		isDmOpen = true;
	}
}


function connect(dmSubNo){
	
	const socket = new SockJS("/ws/dm");
	stompClient = Stomp.over(socket);
    stompClient.connect({}, (frame) => {
		console.log("Connected :"+JSON.stringify(frame));

		//채팅방 구독
        stompClient.subscribe('/toFan/dmRoom/'+dmSubNo, (message) => {
            const msg = JSON.parse(message.body);
			console.log("메세지 수신: "+msg);
			let fromOther =document.querySelector('#dmMsgContent'+dmSubNo)

            const li = document.createElement('div');
				li.style = "text-align:left; align-self: flex-start;margin-bottom: 10px; border:1px solid #F86D72; border-radius: 20px 10px 10px 0px;  width:55%; padding: 5px; background-color: floralwhite;";
				li.innerHTML = msg.msgContent;
				fromOther.appendChild(li);

				let dmMsgContentContainer = document.querySelector("#dmMsgContent"+dmSubNo);
				dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;

        });
            // document.querySelector('#dmMsgContent'+dmSubNo).appendChild(li);
			

    });
}

// 초기화 - 전역 변수로 이전에 선택했던 이미지 요소를 기억해두기
let previousSelectedImg = null;

function enterChatRoom(dmSubNo, artNoDm){
	event.preventDefault();
	// alert("채팅방 "+dmSubNo);

	// 이전에 선택했던 이미지 테두리를 초기화
	if (previousSelectedImg) {
		previousSelectedImg.style.outline = ""; // 원래대로 (없애기)
	}

	// 현재 선택한 이미지에 테두리 추가
	const currentImg = document.querySelector(`#img\${dmSubNo}`);
	currentImg.style.outline = "8px solid yellow";

	// 현재 선택한 이미지를 다음번 초기화를 위해 저장
	previousSelectedImg = currentImg;

	document.querySelector('#chatRoom').innerHTML="";
	let dmMsgDiv=``;
	dmMsgDiv += ` 
			<input type="hidden" id="dmSubNo" name="dmSubNo" value="\${dmSubNo}">
			<input type="hidden" id="msgSndrNo" name="msgSndrNo" value="\${memNoDm}">
			<input type="hidden" id="artNo" name="artNo" value="\${artNoDm}">
			<div style="height: 93%; overflow-y:auto; flex-direction: column-reverse;" id="dmMsgContent\${dmSubNo}"></div>
			<div style="position:sticky; bottom:5px;">
				<input type="text" name="msgContent" id="msgContent" style="width: 85%;" onkeypress="if(event.key === 'Enter') dmSendMsgBtn()" placeholder="메세지를 입력하세요"  >
				<button type="button" class="btn btn-warning" id="sendDmMsg" onclick="dmSendMsgBtn()" >&ensp;<i class="bi bi-send-fill"></i>&ensp;</button>
			</div>
	`;

	document.querySelector('#chatRoom').innerHTML+=dmMsgDiv;
	myLastChatList(dmSubNo); //마지막 대화 가져오기
	connect(dmSubNo); //웹소켓 연결

}


function myLastChatList(dmSubNo){
	axios.post('/dm/lastChat?artNo=0&dmSubNo='+dmSubNo).then(resp=>{
		// console.log("마지막 대화"+JSON.stringify(resp.data));

		const msgList = resp.data;
		const chatRoomList = document.querySelector('#dmMsgContent'+dmSubNo);
		// chatRoomList.innerHTML = ""; // 기존 내용 초기화

		resp.data.forEach(chat => {
			const li = document.createElement('div');
			if(chat.msgSndrNo == memNoDm){
				li.style = "text-align: left; margin-bottom: 10px; background-color:azure; border:1px solid #F86D72; border-radius: 10px 20px 0px 10px; padding: 5px; margin-left:40%; width-max:50%;";
				li.innerHTML = chat.msgContent;
			}else{
				li.style = "text-align:left; align-self: flex-start;margin-bottom: 10px; border:1px solid #F86D72; border-radius: 20px 10px 10px 0px;  width:55%; padding: 5px; background-color: floralwhite;";
				li.innerHTML = chat.msgContent;
			}
			chatRoomList.appendChild(li);

			let dmMsgContentContainer = document.querySelector("#dmMsgContent"+dmSubNo);
			dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;
		});
	})
	.catch(error => {
		console.error("Error lastchatlist:", error);
	});
}

function dmSendMsgBtn(){
	event.preventDefault();

	const dmSubNo = document.getElementById("dmSubNo").value;
    const msgContent = document.getElementById("msgContent").value;
    const artNoDm = document.getElementById("artNo").value;

    if (!msgContent.trim()) {
        alert("메세지를 입력하세요.");
        return;
    }

    // 보내는 메시지 객체 (DmMsgVO랑 맞춰야 함)
    const message = {
        "dmSubNo": dmSubNo,
        "msgSndrNo": memNoDm,
        "msgContent": msgContent,
		"artNo":artNoDm
    };

	// sendMessage(message); //메세지 전송 함수 호출

	document.querySelector('#dmMsgContent'+dmSubNo).innerHTML+=`
		<div style="text-align: left; margin-bottom: 10px; background-color:azure; border:1px solid #F86D72; 
			border-radius: 10px 20px 0px 10px; padding: 5px; margin-left:40%; width-max:50%;">\${msgContent}</div>`;
	let dmMsgContentContainer = document.querySelector("#dmMsgContent"+dmSubNo);
	dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;

    // 메시지 전송
	stompClient.send("/app/dm/msgByFan", {}, JSON.stringify(message));

    // 입력창 비우기
    document.getElementById("msgContent").value = "";

	


}

function msgSideTab(msgTab){
	event.preventDefault();
	// alert("메세지 탭 나와랍");

	// //탭 초기화
	// for(let i=0; i<dmTabs.length; i++){
	// 	dmTabs[i].style.zIndex =11 ;    
	// }

	// dmTabs[msgTab.dataset.dmNum].style.zIndex =20;

	// 모든 탭 감추기
	dmTabs.forEach((tab) => {
		tab.style.display = "none";
	});

	// 메시지 탭 보여주기
	const selectedTab = dmTabs[1];
	selectedTab.style.display = "block";
	myChatRoomList();
}

function subscribeSideTab(subTab){
	event.preventDefault();
	// alert("전체 아티스트 나와랍");

	//탭 초기화
	// for(let i=0; i<dmTabs.length; i++){
	// 	dmTabs[i].style.zIndex =11 ;    
	// }

	// dmTabs[subTab.dataset.dmNum].style.zIndex =20;

	// 탭 초기화: 모든 탭을 숨기기
	dmTabs.forEach((tab) => {
		tab.style.display = "none";
	});

	// 선택한 탭만 보이게
	const selectedTab = dmTabs[subTab.dataset.dmNum];
	selectedTab.style.display = "block";
}

function myChatRoomList(){
	const chatRoomListDiv= document.querySelector('#chatRoomList');
	chatRoomListDiv.innerHTML="";
		axios.post("/oho/dm/checkPurchaseDm?artNo=0&memNo="+memNoDm).then(resp=>{
			console.log("chatRoomList: "+JSON.stringify(resp.data));
			const artInfoList = resp.data;
			
			let chatPicture=``;
			artInfoList.forEach((art, i)=>{

				chatPicture += ` 
					<div>
						<img src="/upload\${art.fileSaveLocate}" width="80" height="80" id="img\${art.dmSubNo}" onclick="enterChatRoom(\${art.dmSubNo},\${art.artNo})"
							style=" border-radius:50px 0 0 50px;  margin: 5px;object-fit: cover; cursor:pointer">
					</div>
				`;
			})
			chatRoomListDiv.innerHTML+=chatPicture;

		})
	
}
function myArtist(){
	document.querySelector('#myArtistText').style.color="black";
	document.querySelector('#recArtistText').style.color="gray";
	// alert("내가 구독한 커뮤니티 아티스트");
	axios.post("/oho/dm/myArtist").then(resp=>{
		const myArtistListDm = resp.data;
		console.log("내가 구독한 커뮤니티 아티스트 : ", myArtistListDm);

		commonArtListDm(myArtistListDm);

		})
		.catch(error => {
			console.error("Error:", error);
		});

}

function recArtist(){
	document.querySelector('#myArtistText').style.color="gray";
	document.querySelector('#recArtistText').style.color="black"; 
	// alert("구독제외 전체 아티스트 리스트트");

	axios.post("/oho/dm/artistList").then(resp=>{
		const artistAllListDm = resp.data;
		console.log("전체 아티스트 목록 : ", artistAllListDm);
		commonArtListDm(artistAllListDm)
		
		})
		.catch(error => {
			console.error("Error:", error);
		});
}

function commonArtListDm(artistAllList){
	const artistListDiv = document.getElementById("artistListDm");
		artistListDiv.innerHTML = ""; 
		let artistLink =`
			<div class="filter-buttons mb-3">
			
			</div>`;
			artistListDiv.insertAdjacentHTML('beforeend', artistLink);
			// alert(artistAllList[0].artGroupNm);
				if (artistAllList.length > 0) {
				let prevGroup = null;
				let groupHtml = "";

				artistAllList.forEach((artist, i) => {
					const artistName = artist.artGroupNm;
					const artistNo = artist.artGroupNo;
					const artistVOList = artist.artistVOList;

					// 새로운 그룹이면 이전 그룹 HTML 마무리하고 추가
					if (artistName !== prevGroup) {
						// 이전 그룹이 존재하면 닫아줌
						if (groupHtml !== "") {
							groupHtml += `</ul></div>`;
							artistListDiv.insertAdjacentHTML('beforeend', groupHtml);
						}

						// 새로운 그룹 시작
						groupHtml = `
							<div class="artist-group_dm">
								<p class="group-name_dm">\${artistName}</p>
								<ul class="artist-list_dm">
						`;
						prevGroup = artistName;
					}

					artistVOList.forEach(artistInfo => {
						groupHtml += `
							<li class="artist_item_dm" style="text-align:center; margin-left: 10px;" 
								data-bs-target="#buyDmModal" data-dm-art-act-nm="\${artistInfo.artActNm}"
								data-dm-art-no="\${artistInfo.artNo}" data-dm-art-img="\${artistInfo.fileSaveLocate}">
								<div role="button" tabindex="0">
									<div>
										<div>
											<img src="/upload\${artistInfo.fileSaveLocate}" width="100" height="100" style="border-radius: 50%; object-fit: cover;">
										</div>
									</div>
									<strong>\${artistInfo.artActNm}</strong>
								</div>
							</li>
						`;
					});

					// 마지막 아티스트일 경우 그룹 닫기
					if (i === artistAllList.length - 1) {
						groupHtml += `</ul></div>`;
						artistListDiv.insertAdjacentHTML('beforeend', groupHtml);
					}
				});
			} else {
				artistListDiv.innerHTML = "<p style='margin-top: 90px;'>가입한 커뮤니티가 없습니다 <br> 커뮤니티 가입 후 아티스트를 만나보실 수 있습니다 <br> <h5>추천아티스트를 확인하고 DM을 시작하세요💌</h5></p>";
			}
}

/* 구독 모달에 값넣어주기기 */
document.addEventListener("DOMContentLoaded", () => {
	document.addEventListener("click", function(e) {
		if (e.target.closest(".artist_item_dm")) {
			const dmArtistItem = e.target.closest(".artist_item_dm");
			// console.log(dmArtistItem.dataset)
			
			const dmArtActNm = dmArtistItem.dataset.dmArtActNm;
			const dmArtImg = dmArtistItem.dataset.dmArtImg;
			const dmArtNo = dmArtistItem.dataset.dmArtNo;

			//구매이력확인
			const checkSubs = {
				'artNo':dmArtNo,
				'memNo':memNoDm
			}
			console.log(checkSubs.memNo);

			axios.post("/oho/dm/checkPurchaseDm?memNo="+memNoDm+"&artNo="+dmArtNo).then(resp=>{
				console.log(resp.data);

				//채팅방이동
				if(resp.data){
					msgSideTab(1);
				}
				else{	//모달 띄우기
					// 모달 내부 요소에 넣기
					document.getElementById("dmArtActNmModal").innerText = "🌟 "+dmArtActNm+" DM 월 구독권 🌟";
					document.getElementById("dmGdsNmModal").value = dmArtActNm;
					document.getElementById("dmArtImgModal").src = "/upload"+dmArtImg;
					document.getElementById("dmGdsFileModal").value = dmArtImg;
					console.log("dmArtImg",dmArtImg);
					document.getElementById("dmArtNoModal").value = dmArtNo; // hidden input이라면
	
					// 모달 수동으로 띄우기
					const modal = new bootstrap.Modal(document.getElementById('buyDmModal'));
					modal.show();

				}
			})
			
		}
	});
});



/* 
let dmTimer = null;
function fShow(){

	clearTimeout(dmTimer); // 기존 타이머 제거

	if(!dmList.style.width){
		dmList.style.width="0px";
		dmList.style.height="0px";
	}
	dmList.style.width=parseInt(dmList.style.width)+20 + "px";
	dmList.style.height=parseInt(dmList.style.height)+20 + "px";

	if(parseInt(dmList.style.width) >= 700){
		console.log("로그인했음: ",'${not empty userVO.memberVO.memNo}')
		if(${not empty userVO.memberVO.memNo}){
			myArtist();
		}else{
			recArtist();
		}
		showTimer = null;
		return;
	}
	dmTimer = setTimeout(fShow, 3);
	
	document.querySelector('#dmIcon').style.zIndex=3;
	
}

function fHide(){

	clearTimeout(dmTimer); // 기존 타이머 제거

	dmList.style.width=parseInt(dmList.style.width)-15 + "px";
	dmList.style.height=parseInt(dmList.style.height)-15 + "px";

	if(parseInt(dmList.style.width) <=0) return;
	setTimeout(fHide,3);

	hideTimer = setTimeout(fHide, 3);

	document.querySelector('#dmIcon').style.zIndex=10;

	dmTimer = setTimeout(fHide, 3);
} */

</script> 
<script src="/js/dm/dmSearch.js" ></script>
</body>  
</html>