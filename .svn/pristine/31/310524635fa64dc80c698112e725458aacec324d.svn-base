<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohot.mapper.MemberMapper">
	<!-- 회원가입 -->
	<insert id="signUp" parameterType="com.ohot.vo.MemberVO">
		<selectKey resultType="int" order="BEFORE" keyProperty="memNo">
			SELECT NVL(MAX(MEM_NO),0)+1 AS "신규 회원번호"
			FROM MEMBER
		</selectKey>
		INSERT INTO MEMBER ( MEM_NO, MEM_LAST_NAME, MEM_FIRST_NAME, MEM_EMAIL, MEM_PSWD)
		VALUES(#{memNo}, #{memLastName}, #{memFirstName}
				, #{memEmail}, #{memPswd})
	</insert>
	
	<!-- 기본으로 ROLD_MEM 권한 insert	-->
	<insert id="insertAuth" parameterType="com.ohot.vo.MemberVO">
		INSERT INTO AUTH(MEM_NO)
		VALUES (#{memNo})
	</insert>
	
	<select id="findByEmail" parameterType="string" resultMap="memberMap">
	    SELECT M.MEM_NO, M.MEM_LAST_NAME, M.MEM_FIRST_NAME, M.MEM_NICKNM
	            , M.MEM_EMAIL, M.MEM_TELNO, M.MEM_BIRTH, M.MEM_PSWD, M.JOIN_YMD
	            , M.SECSN_YMD, M.MEM_ACCESS_TOKEN, M.ENABLED
	            , M.MEM_STAT_SEC_CODE_NO, M.MEM_SEC_CODE_NO, M.MEM_DEL_YN
	            , A.MEM_NO, A.AUTH_NM
	    FROM MEMBER M, AUTH A
	    WHERE M.MEM_NO = A.MEM_NO
	    AND MEM_EMAIL = #{memEmail}
	    AND M.MEM_DEL_YN = 'N'
	</select>
	
	<resultMap type="com.ohot.vo.MemberVO" id="memberMap">
		<result property="rnum" column="RNUM"/>
		<result property="memNo" column="MEM_NO"/>
		<result property="memLastName" column="MEM_LAST_NAME"/>
		<result property="memFirstName" column="MEM_FIRST_NAME"/>
		<result property="memNicknm" column="MEM_NICKNM"/>
		<result property="memEmail" column="MEM_EMAIL"/>
		<result property="memTelno" column="MEM_TELNO"/>
		<result property="memBirth" column="MEM_BIRTH"/>
		<result property="memPswd" column="MEM_PSWD"/>
		<result property="joinYmd" column="JOIN_YMD"/>
		<result property="secsnYmd" column="SECSN_YMD"/>
		<result property="memAccessToken" column="MEM_ACCESS_TOKEN"/>
		<result property="enabled" column="ENABLED"/>
		<result property="memStatSecCodeNo" column="MEM_STAT_SEC_CODE_NO"/>
		<result property="memSecCodeNo" column="MEM_SEC_CODE_NO"/>
		<result property="memDelYn" column="MEM_DEL_YN"/>
		<collection property="authVOList" resultMap="authMap"></collection>
	</resultMap>
	
	<resultMap type="com.ohot.vo.AuthVO" id="authMap">
		<result property="memNo" column="MEM_NO"/>
		<result property="authNm" column="AUTH_NM"/>
	</resultMap>
	
	<!-- 회원 조회 -->
	<select id="memberList" resultType="com.ohot.vo.MemberVO">
		SELECT MEM_NO, MEM_LAST_NAME, MEM_FIRST_NAME, MEM_NICKNM, MEM_EMAIL, REGEXP_REPLACE(MEM_TELNO, '(.{3})(.{4})(.{4})', '\1-\2-\3') AS MEM_TELNO
			  , REGEXP_REPLACE(MEM_BIRTH, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS MEM_BIRTH, MEM_PSWD
			  , REGEXP_REPLACE(JOIN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS JOIN_YMD
			  , REGEXP_REPLACE(SECSN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS SECSN_YMD
			  , MEM_ACCESS_TOKEN, ENABLED, MEM_STAT_SEC_CODE_NO, MEM_SEC_CODE_NO, MEM_DEL_YN
		FROM MEMBER
		AND MEM_DEL_YN = 'N'
	</select>
	
	<!-- 회원 검색 조회 -->
	<select id="memberSearchList" resultMap="memberMap" parameterType="hashMap">
		SELECT S.*
		FROM
		(
			SELECT ROW_NUMBER() OVER(ORDER BY T.RNUM DESC) RRNUM, T.*
			FROM
			(
			    SELECT ROW_NUMBER() OVER(ORDER BY MEM_NO ASC) AS RNUM, MEM_NO, MEM_LAST_NAME, MEM_FIRST_NAME, MEM_NICKNM, MEM_EMAIL
	                  , REGEXP_REPLACE(MEM_TELNO, '(.{3})(.{4})(.{4})', '\1-\2-\3') AS MEM_TELNO
	                  , REGEXP_REPLACE(MEM_BIRTH, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS MEM_BIRTH, MEM_PSWD
	                  , REGEXP_REPLACE(JOIN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS JOIN_YMD
	                  , REGEXP_REPLACE(SECSN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS SECSN_YMD
	                  , MEM_ACCESS_TOKEN, ENABLED
	                  , FN_CODE_NO_TO_CODE_NM(MEM_STAT_SEC_CODE_NO) AS MEM_STAT_SEC_CODE_NO
	                  , FN_CODE_NO_TO_CODE_NM(MEM_SEC_CODE_NO) AS  MEM_SEC_CODE_NO
	                  , MEM_DEL_YN
	            FROM MEMBER
				WHERE 1 = 1
				AND MEM_DEL_YN = 'N'
				<include refid="where"></include>
			)T
		 )S
		WHERE S.RRNUM BETWEEN (#{currentPage} * #{size}) - (#{size} - 1) AND (#{currentPage} * #{size})
	</select>
	
	<sql id="where">
		<if test="keyword!=null and keyword!=''">
			AND (
			 	<choose>
			 		<when test="mode=='memEmail'">
			 			 MEM_EMAIL LIKE '%' || #{keyword} || '%'
			 		</when>
			 		<when test="mode=='memBirth'">
			 			 MEM_BIRTH LIKE '%' || #{keyword} || '%'
			 		</when>
			 		<otherwise>
			 			(MEM_EMAIL LIKE '%' || #{keyword} || '%' OR MEM_BIRTH LIKE '%' || #{keyword} || '%')
			 		</otherwise>
			 	</choose>
		 	)
		</if>		
	</sql>
	
	<select id="memberDetail" parameterType="com.ohot.vo.MemberVO">
		SELECT MEM_NO, MEM_LAST_NAME, MEM_FIRST_NAME, MEM_NICKNM, MEM_EMAIL, REGEXP_REPLACE(MEM_TELNO, '(.{3})(.{4})(.{4})', '\1-\2-\3') AS MEM_TELNO
			  , REGEXP_REPLACE(MEM_BIRTH, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS MEM_BIRTH, MEM_PSWD
			  , REGEXP_REPLACE(JOIN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS JOIN_YMD
			  , REGEXP_REPLACE(SECSN_YMD, '(.{4})(.{2})(.{2})', '\1-\2-\3') AS SECSN_YMD
			  , MEM_ACCESS_TOKEN, ENABLED, MEM_STAT_SEC_CODE_NO, MEM_SEC_CODE_NO
			  , MEM_DEL_YN
		FROM MEMBER
		WHERE MEM_NO = #{memNo}
		AND MEM_DEL_YN = 'N'
	</select>
	
	
	<update id="memberUpdate" parameterType="com.ohot.vo.MemberVO">
		UPDATE MEMBER
		SET	MEM_LAST_NAME = #{memLastName}, MEM_FIRST_NAME = #{memFirstName}, MEM_NICKNM = #{memNicknm}, MEM_EMAIL = #{memEmail}, MEM_TELNO = #{memTelno}
			  , MEM_BIRTH = #{memBirth}, MEM_PSWD = #{memTelno}, JOIN_YMD = #{joinYmd}, SECSN_YMD= #{secsnYmd}, MEM_STAT_SEC_CODE_NO = #{memStatSecCodeNo}
			  , MEM_SEC_CODE_NO = #{memSecCodeNo}
		WHERE MEM_NO = #{memNo}
	</update>
	
	<select id="getTotalMember" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE 1 = 1
		AND MEM_DEL_YN = 'N'
		<include refid="where"></include>
	</select>
	
	<update id="memberDelete" parameterType="int">
		UPDATE MEMBER
		SET MEM_DEL_YN = 'Y'
		WHERE MEM_NO = #{memNo}
	</update>
	
</mapper>