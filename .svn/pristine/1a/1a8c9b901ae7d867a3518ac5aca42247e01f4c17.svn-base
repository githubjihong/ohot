package com.ohot.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ohot.admin.service.AdminReportService;
import com.ohot.util.BoardPage;
import com.ohot.util.Pazing;
import com.ohot.vo.ArtistGroupVO;
import com.ohot.vo.MemberVO;
import com.ohot.vo.ReportmanageVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller("AdminReportmanageController")
@RequestMapping("/admin/reportmanage")
public class AdminReportmanageController {

	@Autowired
	AdminReportService adminReportService;

	@GetMapping("/reportList")
	public String reportList(Model model,ReportmanageVO reportmanageVO,
			@RequestParam(value="memberType", defaultValue = "", required = false) String memberType,
			@RequestParam(value="currentPage", defaultValue = "1", required = false) int currentPage,
			@RequestParam(value="mode", defaultValue = "", required = false) String mode,
			@RequestParam(value="keyword", defaultValue = "", required = false) String keyword
			) {
		System.out.println("reportList===============================12) : " + reportmanageVO);
		log.info("reportList===============================13) : " );
		int size = 10;
		
		Map<String, Object> map = new HashMap<>();
		map.put("memberType", memberType);
		map.put("currentPage", currentPage);
		map.put("mode", mode);
		map.put("keyword", keyword);
		map.put("size", size);
		log.info("검색 조건 map: " + map);
		
		
		int total = this.adminReportService.getTotalReport(map);
	
		List<ReportmanageVO> reportVOList = this.adminReportService.reportList(map);
		/*
		ReportmanageVO(reportPostNo=1, reportBoardNo=0, reportTitle=불법정보, reportCn=null, reportRegDt=2025-04-11 11:07:00, reportChgDt=null, reportDelYn=N, memNo=0, 
		reportCnt=0, reportTermination=7, reportResult=null, memberVO=null, memName=null, piMemName=오 세인, memLastName=null, memFirstName=null, memNicknm=null, memEmail=null, 
		piMemEmail=null, memTelno=null, memBirth=null, memPswd=null, joinYmd=null, secsnYmd=null, memAccessToken=null, enabled=0, memStatSecCodeNo=null, memSecCodeNo=null, 
		memDelYn=null, reportlist=null, reportGubun=null, currentPage=0, size=0, rnum=0, pictureUrl=null, uploadFile=null, fileGroupNo=0, fileRegdate=null, fileGroupVO=null),
		
		신고타입 : reportmanageVO.reportGubun
		신고처리여부 : reportmanageVO.reportResult
		 */
		log.info("reportVOList===============================1) : " + reportVOList);
		model.addAttribute("reportVOList", reportVOList);
		
		Pazing<ReportmanageVO> boardPage = new Pazing<>(total, currentPage, size, null, keyword);
		log.info("boardPage===============================1) : " + boardPage.getPagingArea());
		
		model.addAttribute("boardPage", boardPage);
		
		return "admin/reportmanage/reportList";

	}

	@ResponseBody
	@GetMapping("/reportListAjax")
	public Map<String, Object> reportListAjax(ReportmanageVO reportmanageVO,
			@RequestParam(value = "reportType", defaultValue = "", required = false) String reportType,
			@RequestParam(value = "currentPage", defaultValue = "1", required = false) int currentPage,
			@RequestParam(value = "mode", defaultValue = "", required = false) String mode,
			@RequestParam(value = "keyword", defaultValue = "", required = false) String keyword) {
		System.out.println("reportmanageVO===============================123) : " + reportmanageVO);
		log.info("reportmanageVO===============================123) : " );
		int size = 10;
		

		Map<String, Object> map = new HashMap<>();
		int total = this.adminReportService.getTotalReport(map);

		List<ReportmanageVO> reportVOList = this.adminReportService.reportSearchList(map);
		log.info("reportVOList===============================1) : " + reportVOList);
		log.info("reportVOList===============================1-1) : " + reportVOList.size());
		
		for (int i = 0; i < reportVOList.size(); i++) {
			log.info("reportVOList===============================1-1) : " + reportVOList);
			
		}
		List<ReportmanageVO> ReportManageList = this.adminReportService.reportSearchList(map);
		log.info("ReportManageList===============================2) : " + ReportManageList);

		for (int i = 0; i < ReportManageList.size(); i++) {
			log.info("ReportManageList===============================3) : " + ReportManageList.get(i));
			
		}
		

		
		map.put("content", ReportManageList);
		map.put("currentPage", currentPage);
		map.put("boardPage", new BoardPage<>(total, currentPage, size, keyword, reportVOList, mode));
		map.put("reportType", reportType);
		map.put("size", size);
		map.put("mode", mode);
		map.put("mediaDelYn", "N");
		map.put("keyword", keyword);
		map.put("reportmanageVO", reportmanageVO);
		map.put("reportPostNo", reportmanageVO.getReportPostNo());
		map.put("reportResult", reportmanageVO.getReportResult());

		log.info("ReportManageList======================3-2) : " + ReportManageList);

		return map;

	}

	@ResponseBody
	@GetMapping("/reportmanageDetail")
	public ReportmanageVO detail(@RequestParam(value = "reportPostNo", required = true) int reportPostNo,
			@ModelAttribute(value = "reportmanageVO") ReportmanageVO reportmanageVO, Map<String, Object> map) {
		// reportmanageVO : ReportmanageVO(reportPostNo=3..
		log.info("edit-> reportmanageVO : " + reportmanageVO);

		// 신고 상세페이지
		reportmanageVO = this.adminReportService.getReportById(reportmanageVO);

		log.info("edit-> reportmanageVO : " + reportmanageVO);

		return reportmanageVO;
	}

	// 신고글에 대한 관리자의 처리
	@ResponseBody
	@PostMapping("/reportmanageDetailPost")
	public String detailPost(@RequestParam("reportPostNo") int reportPostNo,
            				 @RequestParam("reportResult") String reportResult, 
            				 ReportmanageVO reportmanageVO) {
		// ReportmanageVO(reportPostNo=3, .. reportResult=002,...
		log.info("detailPost->reportmanageVO : " + reportmanageVO);

		reportmanageVO.setReportPostNo(reportPostNo);
	    reportmanageVO.setReportResult(reportResult);
		    
		int result = this.adminReportService.reportUpdate(reportmanageVO);
		log.info("detailPost->result" + result);

		// http://localhost:28080/admin/reportmanage/reportList
		return "response";

	}

	@ResponseBody
	@PostMapping("/reportmanageDelete")
	public String reportmanageDelete(@RequestParam(value = "reportPostNo") int reportPostNo) {
		log.info("reportmanageDelete->reportPostNo : " + reportPostNo);

		int cnt = this.adminReportService.reportDelete(reportPostNo);
		log.info("reportmanageDelete->result" + cnt);

		String result = "";
		if (cnt == 1) {
			result = "success";
		} else
			result = "fail";

		return "result";
	}
}
