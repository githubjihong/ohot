package com.ohot.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ohot.service.StatsService;
import com.ohot.util.Pazing;
import com.ohot.vo.StatsVO;

import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/admin")
public class StatsController {
	
	@Autowired StatsService statsservice;
	 

	@GetMapping("/stats/list")
	public String list(Model model ,StatsVO statsVO ) {
		
		List<StatsVO> statsList = this.statsservice.statsList(statsVO);
		List<StatsVO> SubscriptionTotal = this.statsservice.SubscriptionTotal(statsVO);
		List<StatsVO> memberTotal = this.statsservice.memberTotal(statsVO);
		List<StatsVO> FollowersTotal = this.statsservice.FollowersTotal(statsVO);
		List<StatsVO> goodTotal = this.statsservice.goodTotal(statsVO);
		
		/* 판매수 List<StatsVO> volume = this.statsservice.volume(statsVO); */
		
		log.info("SubscriptionTotal========================================== : " + SubscriptionTotal);
		log.info("memberTotal========================================== : " + memberTotal);
		log.info("FollowersTotal========================================== : " + FollowersTotal);
		log.info("goodTotal========================================== : " + goodTotal);
		
		/* log.info("volume========================================== : " + volume); */
		
		
		
		model.addAttribute("statsList",statsList);
		model.addAttribute("SubscriptionTotal",SubscriptionTotal);
		model.addAttribute("memberTotal",memberTotal);
		model.addAttribute("FollowersTotal",FollowersTotal);
		model.addAttribute("goodTotal",goodTotal); 
		log.info("SubscriptionTotal========================================== : " + SubscriptionTotal);
		log.info("memberTotal========================================== : " + memberTotal);
		log.info("FollowersTotal========================================== : " + FollowersTotal);
		log.info("goodTotal========================================== : " + goodTotal);
		
		return "admin/stats/list";
	}

	@ResponseBody
	@PostMapping("/stats/listAjax")
	public List<StatsVO> listAjax(StatsVO statsVO) {
		
	
		List<StatsVO> statsList = this.statsservice.statsList(statsVO);
		
		log.info("listAjax->statsList : " + statsList);
		
		return statsList;
	}
//	다음꺼양

	@ResponseBody
	@PostMapping("/stats/listBarAjax")
	public List<StatsVO> listBarAjax(StatsVO statsVO) {
		
	
		List<StatsVO> listBarAjax = this.statsservice.listBarAjax(statsVO);
		
		log.info("statsList2 : " + listBarAjax);
		
		return listBarAjax;
	}
	
	@ResponseBody
	@PostMapping("/stats/listdoughnutAjax")
	public List<StatsVO> listdoughnutAjax(StatsVO statsVO) {
		
		
		List<StatsVO> listdoughnutAjax = this.statsservice.listdoughnutAjax(statsVO);
		
		log.info("statsList3========================================== : " + listdoughnutAjax);
		
		return listdoughnutAjax;
	}
	
	//회원
	@GetMapping("/stats/subscription")
	public String subscription(StatsVO statsVO, Model model,
			 @RequestParam(value="currentPage",required=false,defaultValue="1") int currentPage,
	         @RequestParam(value="keyword",required=false,defaultValue="") String keyword
			) {
		
		  Map<String,Object> map = new HashMap<String,Object>();
		  map.put("currentPage", currentPage);
	      map.put("keyword", keyword);
	      
	      //map{currentPage=1}
	      log.info("books->map : " + map);
	      
	    //전체 글 수(검색 포함)
	      int total = this.statsservice.pazing(map);
	      log.info("subscription->total : " + total);
	      
			/*
			 * Pazing<StatsVO> pazing = new Pazing(total, currentPage, 8, keyword, null)<>;
			 * log.info("books->articlePage : " + pazing);
			 */
	      
	        model.addAttribute("title", "페이징");
			/* model.addAttribute("pazing", pazing); */
	        
		return "admin/stats/subscription";
	}	
	
	@ResponseBody
	@GetMapping("/admin/stats/memberSignUp")
	public String memberSignUp (
			HttpServletRequest request, HttpServletResponse response
			){
		
		return "admin/stats/memberSignUp";
	}
	
	//회원
	@ResponseBody
	@PostMapping("/stats/listMemberAjax")
	public List<StatsVO> listMemberAjax(StatsVO statsVO,Model model) {
		
		List<StatsVO> listMemberAjax = this.statsservice.listMemberAjax(statsVO);
		
		model.addAttribute("listMemberAjax",listMemberAjax);
		
		log.info("List->listMemberAjax : " + listMemberAjax);
		
		return listMemberAjax;
	}
	
	//커뮤니티 통계
	
	 @ResponseBody
	 @GetMapping("/admin/stats/communityMember") public String communityMember
	 (HttpServletRequest request, HttpServletResponse response, Model
	 model,StatsVO statsVO){
	 
	 List<StatsVO> communityMember = this.statsservice.communityMember(statsVO);
	 log.info("communityMember -> communityMember : ",communityMember);
	 
	 
	 model.addAttribute("communityMember",communityMember);
	 
	 
	 return "admin/stats/communityMember"; }
	 
	
//	@ResponseBody
//	@PostMapping("/stats/listMemberAjax") 
//	public List<StatsVO> listcommunityMemberAjax(StatsVO statsVO) {
//	
//		List<StatsVO> listcommunityMemberAjax = this.statsservice.listcommunityMemberAjax(statsVO);
//		
//		log.info("List->listcommunityMemberAjax : " + listcommunityMemberAjax);
//		
//		return listcommunityMemberAjax; 
//	}
	
	
	
}
