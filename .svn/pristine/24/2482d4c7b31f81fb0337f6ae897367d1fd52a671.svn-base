<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohot.mapper.StatsMapper">

	<!-- 
	ex) 1번 아티스트의 2025년03월 일별통계
	 -->
	 <!-- 굿즈매출 리스트-->
	<select id="statsList" resultType="com.ohot.vo.StatsVO">
		 SELECT
		    TO_CHAR(o.STLM_DT, 'YYYY-MM-DD') AS sale_date,
		    SUM(od.amount) AS total_sale
		FROM
		    ORDERS_DETAILS od
		INNER JOIN ORDERS o ON od.ORDER_NO = o.ORDER_NO
		WHERE
		    od.GDS_NO NOT IN (SELECT tk.GDS_NO FROM TICKET tk)
		    AND TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
		GROUP BY
		    TO_CHAR(o.STLM_DT, 'YYYY-MM-DD')
		ORDER BY
		    sale_date

	</select> 
	<!-- 이번달 신고현황 -->
	<select id="listBarAjax" resultType="com.ohot.vo.StatsVO">
		SELECT TO_CHAR(REPORT_REG_DT, 'YYYYMMDD') AS REPORT_REG_DT,
		       COUNT(*) AS CNT2
				FROM   REPORT_BOARD_POST
				WHERE  TO_CHAR(REPORT_REG_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
				GROUP BY TO_CHAR(REPORT_REG_DT, 'YYYYMMDD')
				ORDER BY REPORT_REG_DT
			</select>
			
			<!-- 이번달 티켓 굿즈 디엠 멤버십 유입수 퍼센트 -->
			<select id="listdoughnutAjax" resultType="com.ohot.vo.StatsVO">
				SELECT
			    SUM(CASE WHEN b.tk_vprice IS NOT NULL THEN a.qty * b.tk_vprice ELSE 0 END) AS totalCnts1,
			    SUM(CASE WHEN b.tk_rprice IS NOT NULL THEN a.qty * b.tk_rprice ELSE 0 END) AS totalCnts2,
			    SUM(CASE WHEN b.tk_sprice IS NOT NULL THEN a.qty * b.tk_sprice ELSE 0 END) AS totalCnts3
			FROM
			    ORDERS_DETAILS a
			INNER JOIN
			    ORDERS o ON a.ORDER_NO = o.ORDER_NO
			LEFT JOIN
			    TICKET b ON a.GDS_NO = b.GDS_NO
			WHERE
			    TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
			    AND b.tk_no IS NOT NULL
	  </select>
	  
	<select id="memberTotal" resultType="com.ohot.vo.StatsVO">
		SELECT SUM(CNT) AS TOTAL_CNT2
		  FROM (
		      SELECT SUBSTR(JOIN_YMD, 1, 8) AS JOIN_YMD,
		             COUNT(*) AS CNT
		      FROM MEMBER
		      WHERE TO_DATE(JOIN_YMD, 'YYYYMMDD') &gt;= TRUNC(SYSDATE, 'MM')
		        AND TO_DATE(JOIN_YMD, 'YYYYMMDD') &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
		      GROUP BY SUBSTR(JOIN_YMD, 1, 8)
		  )
	</select>
	<!-- 판매수량 -->
	<select id="salesVolume" resultType="com.ohot.vo.StatsVO">
        SELECT
		    SUM(od.qty) AS TOTAL_QTY
		FROM
		    ORDERS_DETAILS od
		INNER JOIN ORDERS o ON od.ORDER_NO = o.ORDER_NO
		WHERE
		    od.GDS_NO NOT IN (SELECT tk.GDS_NO FROM TICKET tk)
		    AND TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')

	</select>
	<!-- 이번달 판매금액 -->
	<select id="totalSales" resultType="com.ohot.vo.StatsVO">
         SELECT
		    TO_CHAR(SUM(od.amount), 'FM999,999,999') AS TOTAL_AMOUNT
		FROM
		    ORDERS_DETAILS od
		INNER JOIN ORDERS o ON od.ORDER_NO = o.ORDER_NO
		WHERE
		    od.GDS_NO NOT IN (SELECT tk.GDS_NO FROM TICKET tk)
		    AND TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
      </select>
	
	<!--이번달 누적구독수-->
	<select id="SubscriptionTotal" resultType="com.ohot.vo.StatsVO">
		SELECT 
		    COUNT(*) AS TOTAL_CNT
		FROM 
		    DM_SUB O
		WHERE 
		    O.DM_STR_YMD &gt;= TRUNC(SYSDATE, 'MM')
		    AND O.DM_STR_YMD &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
	</select>
	
	<!--이번달 멥버쉽가입-->
	<select id="FollowersTotal" resultType="com.ohot.vo.StatsVO">
		SELECT 
	       COUNT(*) AS TOTAL_CNT3
	    FROM 
	        MEMBERSHIP O
	    WHERE 
	        O.START_YMD &gt;= TRUNC(SYSDATE, 'MM') 
	        AND O.START_YMD &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
	</select>
	
	<!-- 누적 커뮤니티 가입 -->
	<select id="goodTotal" resultType="com.ohot.vo.StatsVO">
		SELECT COUNT(*) AS totalCnt4
		FROM COMMUNITY_PROFILE
		WHERE COM_JOIN_YMD &gt;= TRUNC(SYSDATE, 'MM')
  		  AND COM_JOIN_YMD &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
	</select>
	
	<select id="goodcnt" resultType="com.ohot.vo.StatsVO">
		SELECT 
		    COUNT(*) AS GOOD_CNT2
		FROM 
		    ORDERS O
		WHERE 
		    O.STLM_YN = 'Y'
		    AND O.STLM_DT &gt;= TRUNC(SYSDATE, 'MM') 
		    AND O.STLM_DT &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
	</select>
	
	<select id="goodNm" resultType="com.ohot.vo.StatsVO">
		SELECT
		    G.GDS_NM AS GOOD_NM2
		FROM
		    GOODS G
		WHERE
		    G.GDS_DEL_YN = 'N'
		    AND G.REG_DT &gt;= TRUNC(SYSDATE, 'MM')
		    AND G.REG_DT &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
		GROUP BY
		    G.GDS_NM
		ORDER BY
		    SUM(G.QTY) DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 
	// 전체 글 수(검색 포함)
	public int getTotal(Map<String, Object> map);
	 -->
	 <select id="pazing" parameterType="hashMap" resultType="int">
	 	SELECT COUNT(*)
		  FROM MEMBER
		WHERE  1 = 1
		<if test="keyword!=null and keyword!=''">
			AND    MEM_LAST_NAME LIKE '%' || #{keyword} || '%'
		</if>
	 </select>
	 
	<!-- 회원가입 통계 -->	 
	 <select id="listMemberAjax" resultType="com.ohot.vo.StatsVO">
		SELECT SUBSTR(JOIN_YMD, 1, 8) JOIN_YMD
		     , COUNT(*) MEMBER_CNT
		FROM   MEMBER 
		WHERE    SUBSTR(JOIN_YMD,1,6) = #{joinYmd}
		GROUP BY SUBSTR(JOIN_YMD,1,8)
		ORDER BY 1
	</select>
	<!-- 커뮤니티 구독 통계 -->
	<select id="communityMember" resultType="com.ohot.vo.StatsVO">
		  SELECT SUBSTR(COM_JOIN_YMD, 1, 6) COM_JOIN_YMD
		     , COUNT(*) COMPROFILECNT
		FROM   COMMUNITY_PROFILE 
		WHERE    SUBSTR(COM_JOIN_YMD,1,6) = '202503'
		GROUP BY SUBSTR(COM_JOIN_YMD,1,6)
		ORDER BY 1
        
	</select>
	
	<!-- 아이돌 인기top6사진 업로드 -->
	<select id="editPost" resultType="com.ohot.vo.StatsVO">
        SELECT 
		    ART.ARTIST_NAME,
		    F.FILE_ORIGINAL_NAME,
		    F.FILE_SAVE_NAME,
		    F.FILE_SAVE_LOCATE,
		    F.FILE_EXT
		FROM (
		    SELECT 
		        A.ART_ACT_NM AS ARTIST_NAME,
		        A.FILE_GROUP_NO,
		        COUNT(D.DM_SUB_NO) AS SUB_COUNT
		    FROM 
		        ARTIST A
		    JOIN 
		        DM_SUB D ON A.ART_NO = D.ART_NO
		    WHERE 
		        A.ART_DEL_YN = 'N'
		    GROUP BY 
		        A.ART_ACT_NM, A.FILE_GROUP_NO
		    ORDER BY 
		        SUB_COUNT DESC
		    FETCH FIRST 5 ROWS ONLY
		) ART
		LEFT JOIN (
            SELECT ROW_NUMBER() OVER(PARTITION BY FILE_GROUP_NO ORDER BY FILE_GROUP_NO ASC) RNUM
                , FILE_SN, FILE_GROUP_NO, FILE_ORIGINAL_NAME, FILE_SAVE_NAME, FILE_SAVE_LOCATE, FILE_SIZE, FILE_EXT, FILE_MIME, FILE_FANCYSIZE, FILE_SAVE_DATE, FILE_DOWNCOUNT
            FROM FILE_DETAIL
		) F ON ART.FILE_GROUP_NO = F.FILE_GROUP_NO AND RNUM = 1
    </select>

    <!-- 올해 예매통계 -->
    <select id="listdoughnutAjax2" resultType="com.ohot.vo.StatsVO">
		WITH ORDER_SALES AS (
		    SELECT 
		        TO_CHAR(O.STLM_DT, 'YYYY-MM-DD') AS sale_date,
		        SUM(O.GRAMT) AS revenue
		    FROM 
		        ORDERS O
		    WHERE 
		        O.STLM_YN = 'Y'
		        AND O.STLM_DT &gt;= TRUNC(SYSDATE, 'YYYY')
		        AND O.STLM_DT &lt; ADD_MONTHS(TRUNC(SYSDATE, 'YYYY'), 12)
		    GROUP BY 
		        TO_CHAR(O.STLM_DT, 'YYYY-MM-DD')
		),
		TICKET_SALES AS (
		    SELECT 
		        TO_CHAR(R.RSVTN_DT, 'YYYY-MM-DD') AS sale_date,
		        SUM(T.TK_SPRICE) AS revenue  
		    FROM 
		        TK_RSVTN R
		    JOIN 
		        TK_DETAIL D ON R.TK_DETAIL_NO = D.TK_DETAIL_NO
		    JOIN 
		        TICKET T ON D.TK_NO = T.TK_NO
		    WHERE 
		        R.RSVTN_ENUM = 2
		        AND R.RSVTN_DT &gt;= TRUNC(SYSDATE, 'YYYY')
		        AND R.RSVTN_DT &lt; ADD_MONTHS(TRUNC(SYSDATE, 'YYYY'), 12)
		    GROUP BY 
		        TO_CHAR(R.RSVTN_DT, 'YYYY-MM-DD')
		),
		COMBINED_SALES AS (
		    SELECT sale_date, revenue FROM ORDER_SALES
		    UNION ALL
		    SELECT sale_date, revenue FROM TICKET_SALES
		)
		SELECT 
		    sale_date,
		    SUM(revenue) AS total_revenue
		FROM 
		    COMBINED_SALES
		GROUP BY 
		    sale_date
		ORDER BY 
		    sale_date


	</select>
	<!-- 굿즈통계상세 -->
		<select id="goodsStatistics" parameterType="hashMap" resultType="com.ohot.vo.StatsVO">
		    WITH U AS (
		        SELECT
		            ROW_NUMBER() OVER (ORDER BY A.gds_no DESC) AS rnum,
		            A.gds_no,
		            A.gds_type,
		            A.gds_nm,
		            A.unit_price,
		            NVL(order_stats.purchase_count, 0) AS productPurchases,
		            A.reg_dt,
		            A.art_group_no,
		            B.art_group_nm,
		            group_stats.product_count AS goodsNum,
		            CASE
		                WHEN group_stats.total_group_orders IS NULL OR group_stats.total_group_orders = 0 THEN 0
		                ELSE ROUND(NVL(order_stats.purchase_count, 0) / group_stats.total_group_orders, 2)
		            END AS competition
		        FROM
		            goods A
		            LEFT JOIN artist_group B ON A.art_group_no = B.art_group_no
		            LEFT JOIN (
		                SELECT
		                    gds_no,
		                    COUNT(*) AS purchase_count
		                FROM
		                    orders_details
		                GROUP BY
		                    gds_no
		            ) order_stats ON A.gds_no = order_stats.gds_no
		            LEFT JOIN (
		                SELECT
		                    A.art_group_no,
		                    COUNT(*) AS product_count,
		                    SUM(NVL(order_stats2.purchase_count, 0)) AS total_group_orders
		                FROM
		                    goods A
		                    LEFT JOIN (
		                        SELECT
		                            gds_no,
		                            COUNT(*) AS purchase_count
		                        FROM
		                            orders_details
		                        GROUP BY
		                            gds_no
		                    ) order_stats2 ON A.gds_no = order_stats2.gds_no
		                GROUP BY
		                    A.art_group_no
		            ) group_stats ON A.art_group_no = group_stats.art_group_no
		        WHERE 1 = 1
		        <include refid="where" />
		    )
		    SELECT *
		    FROM U
		    WHERE rnum BETWEEN (#{currentPage} * 10) - (10 - 1)
		                  AND (#{currentPage} * 10)
		</select>
     
   	   <select id="getTotal" parameterType="hashMap" resultType="int">
		    SELECT COUNT(*)
		    FROM   goods A , orders_details B, artist_group C
		    WHERE  1 = 1
		    <include refid="where"></include>
		</select>
	   
	   <sql id="where">
		    <if test="keyword!=null and keyword!=''">
		        AND    (GDS_NM LIKE '%' || #{keyword} || '%'
		            OR  UNIT_PRICE     LIKE '%' || #{keyword} || '%')
		    </if>
		</sql>
		
		 <select id="topList" resultType="com.ohot.vo.StatsVO">
		 	WITH ranked_goods AS (
			    SELECT
			        ROW_NUMBER() OVER (ORDER BY NVL(C.purchase_count, 0) DESC) AS rnum,
			        A.gds_nm,
			        B.art_group_nm
			    FROM
			        goods A
			        JOIN artist_group B ON A.art_group_no = B.art_group_no
			        LEFT JOIN (
			            SELECT
			                gds_no,
			                COUNT(*) AS purchase_count
			            FROM
			                orders_details
			            GROUP BY
			                gds_no
			        ) C ON A.gds_no = C.gds_no
			)
			SELECT *
			FROM ranked_goods
			WHERE rnum >= 1
			ORDER BY rnum
			FETCH FIRST 10 ROWS ONLY
		 </select>
		 
	<select id="GoodsStatisticsAjax" resultType="com.ohot.vo.StatsVO">
			SELECT TO_CHAR(REG_DT, 'YYYYMMDD') AS REG_DT,
			       COUNT(*) AS CNT9
			FROM   GOODS
			WHERE  TO_CHAR(REG_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
			GROUP BY TO_CHAR(REG_DT, 'YYYYMMDD')
			ORDER BY REG_DT
	    
	</select>

    <!-- 이번달 예매총매출 -->
	<select id="reservationTotalSales" resultType="com.ohot.vo.StatsVO">
		SELECT

    	TO_CHAR(SUM(total_vprice_sales + total_rprice_sales + total_sprice_sales), 'FM999,999,999') AS reservation_total_sales
		FROM (
		    SELECT
		        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD') AS sale_date,
		        SUM(CASE WHEN b.tk_vprice IS NOT NULL THEN a.qty * b.tk_vprice ELSE 0 END) AS total_vprice_sales,
		        SUM(CASE WHEN b.tk_rprice IS NOT NULL THEN a.qty * b.tk_rprice ELSE 0 END) AS total_rprice_sales,
		        SUM(CASE WHEN b.tk_sprice IS NOT NULL THEN a.qty * b.tk_sprice ELSE 0 END) AS total_sprice_sales
		    FROM
		        ORDERS_DETAILS a
		    INNER JOIN
		        ORDERS o ON a.ORDER_NO = o.ORDER_NO
		    LEFT JOIN
		        TICKET b ON a.GDS_NO = b.GDS_NO
		    WHERE
		        TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
		        AND b.tk_no IS NOT NULL
		    GROUP BY
		        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD')
		)
	    
	</select>
	
	<!-- 이번달 콘서트매출 -->
	<select id="concertSales" resultType="com.ohot.vo.StatsVO">
        SELECT
		    TO_CHAR(SUM(total_vprice_sales), 'FM999,999,999') AS CONCERT_TOTAL_SALES
		FROM (
		    SELECT
		        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD') AS sale_date,
		        SUM(CASE WHEN b.tk_vprice IS NOT NULL THEN a.qty * b.tk_vprice ELSE 0 END) AS total_vprice_sales
		    FROM
		        ORDERS_DETAILS a
		    INNER JOIN
		        ORDERS o ON a.ORDER_NO = o.ORDER_NO
		    LEFT JOIN
		        TICKET b ON a.GDS_NO = b.GDS_NO
		    WHERE
		        TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
		        AND b.tk_no IS NOT NULL
		    GROUP BY
		        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD')
		)
    </select>
	
	<!-- 이번달 팬미팅매출 -->
	<select id="fanSales" resultType="com.ohot.vo.StatsVO">
        <![CDATA[
    SELECT
	    TO_CHAR(SUM(FANMEETING_TOTAL_SALES), 'FM999,999,999') AS FANMEETING_TOTAL_SALES
	FROM (
	    SELECT
	        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD') AS sale_date,
	        SUM(CASE WHEN b.tk_rprice IS NOT NULL THEN a.qty * b.tk_rprice ELSE 0 END) AS FANMEETING_TOTAL_SALES
	    FROM
	        ORDERS_DETAILS a
	    INNER JOIN
	        ORDERS o ON a.ORDER_NO = o.ORDER_NO
	    LEFT JOIN
	        TICKET b ON a.GDS_NO = b.GDS_NO
	    WHERE
	        TO_CHAR(o.STLM_DT, 'YYYYMM') = TO_CHAR(SYSDATE, 'YYYYMM')
	        AND b.tk_no IS NOT NULL
	    GROUP BY
	        TO_CHAR(o.STLM_DT, 'YYYY-MM-DD')
	)
]]>

    </select>
    
	<!-- 이번달 기타매출 -->
	<select id="restSales" resultType="com.ohot.vo.StatsVO">
        <![CDATA[
    SELECT 
        TO_CHAR(NVL(SUM(T.TK_SPRICE), 0), 'FM999,999,999') AS ETC_TICKET_SALES
    FROM 
        TK_RSVTN R
    JOIN 
        TK_DETAIL D ON R.TK_DETAIL_NO = D.TK_DETAIL_NO
    JOIN 
        TICKET T ON D.TK_NO = T.TK_NO
    WHERE 
        R.RSVTN_ENUM = 2
        AND R.RSVTN_DT >= TRUNC(SYSDATE, 'MM')
        AND R.RSVTN_DT < ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)
        AND T.TK_CTGR NOT IN ('콘서트', '팬미팅')
		]]>

    </select>
    
    <!-- 신고토탈 -->
    <select id="reportTotal" resultType="com.ohot.vo.StatsVO">
       SELECT 
		    COUNT(*) AS REPORT_TOTAL_CNT
		FROM 
		    REPORT_BOARD_POST O
		WHERE 
		    O.REPORT_REG_DT &gt;= TRUNC(SYSDATE, 'MM')
		    AND O.REPORT_REG_DT &lt; ADD_MONTHS(TRUNC(SYSDATE, 'MM'), 1)

    </select>
</mapper>