package com.ohot.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.ohot.service.ArtistGroupService;
import com.ohot.service.impl.UsersServiceImpl;
import com.ohot.shop.vo.GoodsVO;
import com.ohot.vo.ArtistGroupVO;
import com.ohot.vo.CustomUser;
import com.ohot.vo.UsersVO;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class HomeController {
	
	@Autowired
	ArtistGroupService artistGroupService;
	
	@Autowired
	UserDetailsService userDetailService;
	
	@Autowired
	UsersServiceImpl usersService;
	
	// 홈페이지
	@GetMapping("/oho")
	public String homePage(Model model
							, @AuthenticationPrincipal CustomUser customUser
			) {
		log.info("홈페이지 포워딩");
		
		Map<String, Object> dmMap = new HashMap<>();
		Map<String, Object> unMemMap = new HashMap<>();
		Map<String, Object> joinMap = new HashMap<>();
		Map<String, Object> unjoinMap = new HashMap<>();
		
		dmMap.put("join", null);
		List<ArtistGroupVO> dmList = this.usersService.artistGroupList(dmMap); // 디엠리스트
		log.info("디엠 리스트 : " + dmList);
		
		if(customUser == null) { // 비회원이 홈페이지에 접속했을 경우
			unMemMap.put("join", "no");
			unMemMap.put("memNo", null);
			
			// 새로운 아티스트를 만나보세요!
			List<ArtistGroupVO> newArtistGroupList = this.usersService.artistGroupList(unMemMap);
			log.info("비회원의 전체 리스트 : " + newArtistGroupList);
			
			model.addAttribute("newArtistGroupList", newArtistGroupList);
		}
		else { // 회원이 홈페이지에 접속했을 경우
			UsersVO usersVO =  customUser.getUsersVO();
			log.info("usersVO : " + usersVO);
			int memNo = (int) usersVO.getUserNo();
			
			// 가입한 그룹 리스트
			joinMap.put("join", "yes");
			joinMap.put("memNo", memNo);
			List<ArtistGroupVO> joinArtistGroupList = this.usersService.artistGroupList(joinMap);
			log.info("회원이 가입한 그룹의 리스트 : " + joinArtistGroupList);
			
			
			// 가입하지 않은 그룹 리스트
			unjoinMap.put("join", "no");
			unjoinMap.put("memNo", memNo);
			List<ArtistGroupVO> newArtistGroupList = this.usersService.artistGroupList(unjoinMap);
			log.info("회원이 가입하지 않은 그룹의 리스트 : " + newArtistGroupList);
			
			// 사용자가 가입한 그룹의 굿즈 리스트
			List<GoodsVO> joinGroupGoodsList = this.usersService.joinGroupGoodsList(memNo);
			log.info("회원의 가입한 그룹의 굿즈 리스트 : " + joinGroupGoodsList);
			
			model.addAttribute("memNo", memNo);
			model.addAttribute("joinArtistGroupList", joinArtistGroupList);
			model.addAttribute("newArtistGroupList", newArtistGroupList);
			model.addAttribute("joinGroupGoodsList", joinGroupGoodsList);
		}
		
		model.addAttribute("dmList", dmList);
		
		return "home";
	}
	
	// 홈페이지, 굿즈샵 로그인
	@GetMapping("/login")
	public String loginPage(@RequestParam(required = false) String redirectURL) {
		log.info("로그인 페이지 포워딩");
		log.info("loginPage -> redirectURL : "+redirectURL);
		
		return "login";
	}
	
	// 홈페이지, 굿즈샵 로그아웃
	@PostMapping("/logout")
	public void logout(HttpServletRequest request, HttpServletResponse response) {
		new SecurityContextLogoutHandler().logout(request, response, 
				SecurityContextHolder.getContext().getAuthentication()
				);
	}
	
	// 관리자 로그인
	@GetMapping("/admin/login")
	public String adminLogin() {
		log.info("관리자 로그인 포워딩");
		
		return "admin/adminLogin";
	}
	
	
	@GetMapping("/template")
	public String template() {
		return "template";
	}
}

