package com.ohot.home.inquiry.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ohot.home.inquiry.service.InquiryPostService;
import com.ohot.home.inquiry.vo.InquiryTypeVO;
import com.ohot.vo.BoardPostVO;
import com.ohot.vo.CustomUser;
import com.ohot.vo.UsersVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/oho/inquiryPost")
@Controller
public class InquiryPostController {
	
	@Autowired
	InquiryPostService inquiryPostService;
	
	@GetMapping("")
	public String getInquiryPostList() {
		return "inquiryPost/inquiryPost";
	}
	
	@ResponseBody
	@GetMapping("/getListAjax")
	public Map<String,Object> getListAjax(@RequestParam Map<String, Object> params
							, @AuthenticationPrincipal CustomUser customUser
			) {
		log.info("getListAjax -> params : " + params);
		//{inqType=1, inqWriter=, startDate=, endDate=, mode=, keyword=, page=1, blockSize=10, start=1, end=10}
		
		
		
		int currentPage = 1;
		try {
		    currentPage = Integer.parseInt(String.valueOf(params.get("page")));
		} catch (Exception e) {
		    log.info("페이지 파싱 실패, 기본값 1 사용");
		}
		
	    List<BoardPostVO> InquiryPostList;
		// 게스트이거나 회원일 경우
		if(customUser == null ||
				customUser.getAuthorities().stream()
				.anyMatch(auth -> auth.getAuthority().equals("ROLE_MEM") || auth.getAuthority().equals("ROLE_ART"))) {
			params.put("isAdmin", false);
			InquiryPostList = this.inquiryPostService.getInquiryPostList(params);
		}else { // 관리자일 경우
			params.put("isAdmin", true);
			InquiryPostList = this.inquiryPostService.getInquiryPostList(params);
		}
		
		int size = 10;
		int total = this.inquiryPostService.getTotalCnt(params);
		log.info("getListAjax -> total : " + total);
		
		int totalPages = (int) Math.ceil((double) total / size);
	    int startPage = Math.max(1, currentPage - 10);
	    int endPage = Math.min(totalPages, currentPage + 9);
		
	    Map<String, Object> result = new HashMap<>();
	    result.put("content", InquiryPostList);
	    result.put("currentPage", currentPage);
	    result.put("totalPages", totalPages);
	    result.put("startPage", startPage);
	    result.put("endPage", endPage);
	    result.put("total", total);
	    
	    log.info("result : " + result);
		
		return result;
	}
	
	@GetMapping("/detail")
	public String getInquiryDetail(	@RequestParam int boardNo
									, @AuthenticationPrincipal CustomUser customUser
									, Model model
			) {
		log.info("getInquiryDetail -> boardNo : " + boardNo);
		if(customUser != null) {
			UsersVO usersVO = customUser.getUsersVO();
			model.addAttribute("usersVO", usersVO);
		}
		
		BoardPostVO boardPostVO = this.inquiryPostService.getInquiryDetail(boardNo);
		model.addAttribute("boardPostVO", boardPostVO);
		return "inquiryPost/detail";
	}
	
	@GetMapping("/createPost")
	public String createPost(@RequestParam(required = false, defaultValue = "0") int bbsPostNo 
							, Model model) {

		log.info("createPost -> bbsPostNo : " + bbsPostNo);
		if(bbsPostNo != 0) { // 수정일 경우
			BoardPostVO boardPostVO = this.inquiryPostService.getInquiryDetail(bbsPostNo);
			model.addAttribute("boardPostVO", boardPostVO);
		}
		
		int boardNo = this.inquiryPostService.getMaxNo();
		List<InquiryTypeVO> inqTypeVOList = this.inquiryPostService.getInqTypeVO();
		model.addAttribute("boardNo", boardNo);
		model.addAttribute("inqTypeVOList", inqTypeVOList);
		return "inquiryPost/create";
	}
	
	@PostMapping("/createPost")
	public String createPostAcess(BoardPostVO boardPostVO
									, String inqTypeNo
									, String writer
									, String inqPswd
									, @AuthenticationPrincipal CustomUser customUser
			) {
		log.info("createPostAcess -> customUser :" + customUser);
		log.info("createPostAcess -> baordPostVO :" + boardPostVO);
		log.info("createPostAcess -> writer :" + writer);
		log.info("createPostAcess -> inqTypeNo :" + inqTypeNo);
		
		Map<String, Object> map = new HashMap<>();
		map.put("bbsPostNo", boardPostVO.getBbsPostNo());
		map.put("bbsTypeCdNo", 4);
		map.put("bbsTitle", boardPostVO.getBbsTitle());
		map.put("bbsCn", boardPostVO.getBbsCn());
		map.put("bbsHtmlCn", boardPostVO.getBbsHtmlCn());
		map.put("artGroupNo", 0);
		map.put("bbsCn", boardPostVO.getBbsCn());
		map.put("ansYn", "N");
		map.put("inqTypeNo", inqTypeNo);
		map.put("inqPswd", inqPswd);
		
		if(customUser != null) { // 회원일 경우
			writer = customUser.getUsersVO().getUserMail();
			log.info("writer : " + writer);
			
			map.put("inqWriter", writer);
			map.put("memNo", customUser.getUsersVO().getUserNo());
			log.info("회원일 경우 글작성 : " + map);
			int result = this.inquiryPostService.insertBoardPost(map);
			if(result == 2) {
				log.info("성공!!");
			}
			
		
		}else { // 비회원일 경우
			map.put("memNo", null);
			map.put("inqWriter", writer);
			
			log.info("비회원일 경우 글작성 : " + map);
			int result = this.inquiryPostService.insertBoardPost(map);
			if(result == 2) {
				log.info("성공!!");
			}
		}
		
		return "redirect:/oho/inquiryPost/detail?boardNo=" + boardPostVO.getBbsPostNo();
	}
	
	@PostMapping("/editPost")
	public String editPost(BoardPostVO boardPostVO
							, String inqTypeNo
							, String inqPswd) {
		
		log.info("editPost -> baordPostVO :" + boardPostVO);
		log.info("editPost -> inqTypeNo :" + inqTypeNo);
		log.info("editPost -> inqPswd :" + inqPswd);
		
		Map<String, Object> map = new HashMap<>();
		map.put("bbsPostNo", boardPostVO.getBbsPostNo());
		map.put("inqTypeNo", inqTypeNo);
		map.put("bbsTitle", boardPostVO.getBbsTitle());
		map.put("bbsCn", boardPostVO.getBbsCn());
		map.put("bbsHtmlCn", boardPostVO.getBbsHtmlCn());
		map.put("inqPswd", inqPswd);
		
		log.info("editPost -> 수정된 게시글 : " + map);
		
		int result = this.inquiryPostService.editBoardPost(map);
		
		return "redirect:/oho/inquiryPost/detail?boardNo=" + boardPostVO.getBbsPostNo();
	}
	
	@GetMapping("/deletePost")
	public String deletePost(int bbsPostNo) {
		int result = this.inquiryPostService.deletePost(bbsPostNo);
		return "redirect:/oho/inquiryPost";
	}
	
	
}
