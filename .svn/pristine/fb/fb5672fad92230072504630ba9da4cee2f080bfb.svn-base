<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohot.home.community.mapper.CommunityMapper">
	
	<resultMap type="com.ohot.home.community.vo.CommunityReplyVO" id="ReplyMap">
		<result property="comProfileNo" column="COM_PROFILE_NO"/>
		<result property="replyNo" column="REPLY_NO"/>
		<result property="replyContent" column="REPLY_CONTENT"/>
		<result property="replyDelyn" column="REPLY_DELYN"/>
		<result property="replyCreateDt" column="REPLY_CREATE_DT"/>
		<result property="repCreateDate" column="REP_CREATE_DATE"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="artNo" column="ART_NO"/>
		<result property="memNo" column="MEM_NO"/>
		<result property="mediaPostNo" column="MEDIA_POST_NO"/>
		<result property="comNm" column="COM_NM"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="replyLikeCnt" column="REPLY_LIKE_CNT"/>
		<result property="profileFileNo" column="PROFILE_FILE_NO"/>
		<result property="comAuth" column="COM_AUTH"/>
		<association property="fileGroupVO" resultMap="fileGroupMap"></association>
	</resultMap>
	
	
	<resultMap type="com.ohot.home.community.vo.CommunityPostVO" id="BoardMap">
		<result property="boardNo" column="BOARD_NO"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="boardOnlyMembership" column="BOARD_ONLY_MEMBERSHIP"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="boardDelyn" column="BOARD_DELYN"/>
		<result property="boardCreateDt" column="BOARD_CREATE_DT"/>
		<result property="boardOnlyFan" column="BOARD_ONLY_FAN"/>
		<result property="urlCategory" column="URL_CATEGORY"/>
		<result property="comProfileNo" column="COM_PROFILE_NO"/>
		<result property="memNo" column="MEM_NO"/>
		<result property="comNm" column="COM_NM"/>
		<result property="boardCreateDate" column="BOARD_CREATE_DATE"/>
		<result property="comAuth" column="COM_AUTH"/>
		<association property="fileGroupVO" resultMap="fileGroupMap"></association>
	</resultMap>
	
	<resultMap type="com.ohot.home.community.vo.CommunityProfileVO" id="ProfileMap">
		<result property="comProfileNo" column="COM_PROFILE_NO"/>
		<result property="memNo" column="MEM_NO"/>
		<result property="comNm" column="COM_NM"/>
		<result property="comFileGroupNo" column="COM_FILE_GROUP_NO"/>
		<result property="comJoinYmd" column="COM_JOIN_YMD"/>
		<result property="comDelyn" column="COM_DELYN"/>
		<result property="comAuth" column="COM_AUTH"/>
		<result property="artGroupNo" column="ART_GROUP_NO"/>
		<association property="fileGroupVO" resultMap="fileGroupMap"></association>
	</resultMap>
		 <resultMap type="com.ohot.vo.FileGroupVO" id="fileGroupMap">
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="fileRegdate" column="FILE_REGDATE"/>
		<collection property="fileDetailVOList" resultMap="fileDetailMap"></collection>
	</resultMap>
	
	<resultMap type="com.ohot.vo.FileDetailVO" id="fileDetailMap">
		<result property="fileSn" column="FILE_SN"/>
		<result property="fileGroupNo" column="FILE_GROUP_NO"/>
		<result property="fileOriginalName" column="FILE_ORIGINAL_NAME"/>
		<result property="fileSaveName" column="FILE_SAVE_NAME"/>
		<result property="fileSaveLocate" column="FILE_SAVE_LOCATE"/>
		<result property="fileSize" column="FILE_SIZE"/>
		<result property="fileExt" column="FILE_EXT"/>
		<result property="fileMime" column="FILE_MIME"/>
		<result property="fileFancysize" column="FILE_FANCYSIZE"/>
		<result property="fileSaveDate" column="FILE_SAVE_DATE"/>
		<result property="fileDowncount" column="FILE_DOWNCOUNT"/>
	</resultMap>
	<insert id="joinCommunity" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		<selectKey keyProperty="comProfileNo" resultType="int" order="BEFORE">
			SELECT NVL(MAX(COM_PROFILE_NO),0)+1
			FROM COMMUNITY_PROFILE
		</selectKey>
		INSERT INTO COMMUNITY_PROFILE (COM_PROFILE_NO, MEM_NO, COM_NM,
		 <if test="fileGroupNo!=null and fileGroupNo!=''">
		COM_FILE_GROUP_NO,
		</if>
		COM_JOIN_YMD, COM_DELYN, COM_AUTH, ART_GROUP_NO)
		VALUES (#{comProfileNo},#{memNo},#{comNm},
		<if test="fileGroupNo!=null and fileGroupNo!=''">
		#{fileGroupNo},
		</if>
		TO_CHAR(SYSDATE,'YYYYMMDD'),'N','ROLE_MEM',#{artGroupNo})		
	</insert>
	
	<!-- 
	CommunityProfileVO(comProfileNo=18, memNo=0, comNm=null, comFileGroupNo=0, comJoinYmd=null, comDelyn=null
	, comAuth=null, artGroupNo=0, profileFileNo=0, fileGroupNo=0, fileGroupVO=null, artistGroupVO=null, uploadFile=null)
	 -->
	<select id="profileDetail" parameterType="com.ohot.home.community.vo.CommunityProfileVO" resultMap="ProfileMap">
 SELECT A.COM_PROFILE_NO, A.MEM_NO, A.COM_NM, A.COM_FILE_GROUP_NO AS FILE_GROUP_NO, A.COM_JOIN_YMD, A.COM_DELYN, A.COM_AUTH, A.ART_GROUP_NO,
      MAX(B.FILE_SN) AS FILE_SN
      ,B.FILE_ORIGINAL_NAME, B.FILE_SAVE_NAME, B.FILE_SAVE_LOCATE, B.FILE_SIZE, B.FILE_EXT, B.FILE_MIME, B.FILE_FANCYSIZE, B.FILE_SAVE_DATE, B.FILE_DOWNCOUNT  
      FROM PROFILE_FILE C
      RIGHT JOIN COMMUNITY_PROFILE A ON (C.COM_PROFILE_NO = A.COM_PROFILE_NO)
      LEFT JOIN FILE_DETAIL B ON (A.COM_FILE_GROUP_NO=B.FILE_GROUP_NO)
      WHERE 1=1
           <if test="comProfileNo!=null and comProfileNo!=''">
          AND A.COM_PROFILE_NO = #{comProfileNo}
          </if>
          <if test="comProfileNo==null or comProfileNo==''">
          AND A.MEM_NO=#{memNo}
          AND A.ART_GROUP_NO=#{artGroupNo}
          </if>
      GROUP BY A.COM_PROFILE_NO, A.MEM_NO, A.COM_NM, A.COM_FILE_GROUP_NO, A.COM_JOIN_YMD, A.COM_DELYN,
       A.COM_AUTH, A.ART_GROUP_NO,B.FILE_ORIGINAL_NAME, B.FILE_SAVE_NAME, B.FILE_SAVE_LOCATE,
        B.FILE_SIZE, B.FILE_EXT, B.FILE_MIME, B.FILE_FANCYSIZE, B.FILE_SAVE_DATE, B.FILE_DOWNCOUNT  

	</select>
	<select id="boardDetail" parameterType="com.ohot.home.community.vo.CommunityPostVO" resultMap="BoardMap" >
		SELECT
			    a.board_no,
			    a.board_title,
			    a.board_content,
			    a.board_only_membership,
			    a.file_group_no,
			    a.board_delyn,
			    a.board_create_dt,
			    a.board_only_fan,
			    a.url_category,
			    a.com_profile_no,
			    a.mem_no,
			    b.file_save_locate
		  FROM
			    community_post a
			    LEFT JOIN file_detail    b ON a.file_group_no = b.file_group_no
		 WHERE
	    		board_no = #{boardNo}
	</select>
	
	<update id="editProfileNm" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		UPDATE COMMUNITY_PROFILE
		SET COM_NM = #{comNm}
		   , COM_FILE_GROUP_NO = #{comFileGroupNo}
		WHERE COM_PROFILE_NO = #{comProfileNo}
		
	</update>
	
	<insert id="setFileProfile" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		<selectKey keyProperty="profileFileNo" resultType="int" order="BEFORE">
			SELECT NVL(MAX(PROFILE_FILE_NO),0)+1
			FROM PROFILE_FILE
		</selectKey>
		INSERT INTO PROFILE_FILE(PROFILE_FILE_NO, COM_PROFILE_NO, FILE_GROUP_NO)
		VALUES (#{profileFileNo},#{comProfileNo},#{fileGroupNo})
	</insert>
	
	<update id="deleteProfile" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		UPDATE COMMUNITY_PROFILE
		SET COM_DELYN = 'Y'  
		WHERE COM_PROFILE_NO = #{comProfileNo}
	</update>
	
	<update id="deleteBoard">
        UPDATE COMMUNITY_POST
        SET BOARD_DELYN = 'Y'
        WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="deleteReply">
        UPDATE COMMUNITY_REPLY
        SET REPLY_DELYN = 'Y'
        WHERE REPLY_NO = #{replyNo}
	</update>
	<!-- 맵으로 받아야함 ( 수정 ) 
	{artGroupNo=1, currentPage=1, keyword=}
	-->
	<select id="fanBoardList" parameterType="hashMap" resultMap="BoardMap">
		SELECT S.*
		FROM
		(
		SELECT ROW_NUMBER() OVER(ORDER BY T.RNUM ASC) AS RRNUM
				,T.*
		FROM
		(
			SELECT
			    a.board_no,
			    a.board_title,
			    a.board_content,
			    a.board_only_membership,
			    a.file_group_no,
			    d.file_save_locate,
			    a.board_delyn,
			     TO_CHAR(a.board_create_dt,'YYYY-MM-DD HH24:MI:SS') AS BOARD_CREATE_DATE,
			    a.board_only_fan,
			    a.url_category,
			    a.com_profile_no,
			    a.mem_no,
			    b.com_delyn,
			    b.com_auth,
			    ROW_NUMBER() OVER(ORDER BY A.BOARD_NO DESC) AS RNUM,
			    b.art_group_no,
			    b.com_nm
			FROM
			         community_post a
			    JOIN community_profile b ON ( a.com_profile_no = b.com_profile_no )
			    LEFT OUTER JOIN file_group        c ON ( a.file_group_no = c.file_group_no )
			    LEFT OUTER JOIN file_detail       d ON ( c.file_group_no = d.file_group_no )
			WHERE
			    1 = 1
			    <!-- 게시글 삭제여부 -->
			    AND A.BOARD_DELYN = 'N'
			    <!--커뮤니티 프로필 삭제여부 체크해야 함(삭제시 안보이게) -->
			    AND B.COM_DELYN = 'N'
			    <!-- 아티스트가 아니여야 함 -->
			    AND B.COM_AUTH = 'ROLE_MEM'
			    <!-- 어떤 아티스트그룹의 커뮤니티인지 -->
			    AND B.ART_GROUP_NO = #{artGroupNo}
			
			    
		)T
	)S
		WHERE S.RNUM BETWEEN (#{currentPage} * 8) -(8 - 1) AND (#{currentPage} * 8) 
		
	</select>
	<select id="artistBoardList" parameterType="hashMap" resultMap="BoardMap">
		SELECT T.*
		FROM
		(
			SELECT A.BOARD_NO, A.BOARD_TITLE, A.BOARD_CONTENT, A.BOARD_ONLY_MEMBERSHIP, A.FILE_GROUP_NO, A.BOARD_DELYN, A.BOARD_CREATE_DT, A.BOARD_ONLY_FAN, A.URL_CATEGORY, A.COM_PROFILE_NO, A.MEM_NO
			    ,B.COM_DELYN,B.COM_AUTH , C.ART_NO ,ROWNUM RNUM , B.ART_GROUP_NO
			FROM COMMUNITY_POST A
			JOIN COMMUNITY_PROFILE B ON (A.COM_PROFILE_NO = B.COM_PROFILE_NO)
            JOIN ARTIST C ON (B.MEM_NO = C.MEM_NO)
			WHERE 1=1	    
			    AND A.BOARD_DELYN = 'N'		
			    AND B.COM_DELYN = 'N'
			    AND B.COM_AUTH = 'ROLE_ART'
			    AND B.ART_GROUP_NO = #{artGroupNo}
			   	
		) T
		WHERE T.RNUM BETWEEN (#{currentPage} * 8) -(8 - 1) AND (#{currentPage} * 8)
	</select>
	<select id="getTotalArtist" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
					FROM COMMUNITY_POST A
			JOIN COMMUNITY_PROFILE B ON (A.COM_PROFILE_NO = B.COM_PROFILE_NO)
            JOIN ARTIST C ON (B.MEM_NO = C.MEM_NO)
			WHERE 1=1	    
			    AND A.BOARD_DELYN = 'N'		
			    AND B.COM_DELYN = 'N'
			    AND B.COM_AUTH = 'ROLE_ART'
	</select>
	
		<select id="getTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
			FROM COMMUNITY_POST A
			JOIN COMMUNITY_PROFILE B ON (A.COM_PROFILE_NO = B.COM_PROFILE_NO)
			WHERE 1=1
			    <!-- 게시글 삭제여부 -->
			    AND A.BOARD_DELYN = 'N'
			    <!--커뮤니티 프로필 삭제여부 체크해야 함(삭제시 안보이게) -->
			    AND B.COM_DELYN = 'N'
			    <!-- 아티스트가 아니여야 함 -->
			    AND B.COM_AUTH = 'ROLE_MEM'
		<if test="keyword != null and keyword!=''">
			AND NAME LIKE '% || #{keyword} || %'
		</if>
	</select>
	
	<select id="followingCnt" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		SELECT COUNT(FOLLOW_PROFILE_NO)
		FROM FOLLOW_DETAIL
		WHERE COM_PROFILE_NO = #{comProfileNo}
	</select>
	
	<select id="followerCnt" parameterType="com.ohot.home.community.vo.CommunityProfileVO">
		SELECT COUNT(COM_PROFILE_NO)
		FROM FOLLOW_DETAIL
		WHERE FOLLOW_PROFILE_NO=#{comProfileNo}
	</select>
	
	<select id="followingList" parameterType="com.ohot.home.community.vo.CommunityProfileVO" resultMap="ProfileMap">

		SELECT A.COM_PROFILE_NO, A.MEM_NO, A.COM_NM, A.COM_FILE_GROUP_NO, A.COM_JOIN_YMD, A.COM_DELYN, A.COM_AUTH, A.ART_GROUP_NO
		FROM COMMUNITY_PROFILE A
		JOIN FOLLOW_DETAIL B ON (A.COM_PROFILE_NO = B.FOLLOW_PROFILE_NO)
		WHERE B.COM_PROFILE_NO=#{comProfileNo}

	</select>
	<insert id="addReply" parameterType="com.ohot.home.community.vo.CommunityReplyVO">
	<selectKey resultType="int" order="BEFORE" keyProperty="replyNo" >
			SELECT NVL(MAX(REPLY_NO),0)+1
			FROM COMMUNITY_REPLY
	</selectKey>
	INSERT INTO COMMUNITY_REPLY(REPLY_NO, REPLY_CONTENT, REPLY_DELYN, REPLY_CREATE_DT,
							 BOARD_NO, ART_NO, MEM_NO, MEDIA_POST_NO, COM_PROFILE_NO)
	VALUES(#{replyNo},#{replyContent},'N',SYSDATE,
			#{boardNo},#{artNo},#{memNo},#{mediaPostNo},#{comProfileNo})
	</insert>
	<!--밥먹고 와서 if문 걸기  -->
	<insert id="addBoard" parameterType="com.ohot.home.community.vo.CommunityPostVO">
	<selectKey resultType="int" order="BEFORE" keyProperty="boardNo" >
			SELECT NVL(MAX(BOARD_NO),0)+1
			FROM COMMUNITY_POST
	</selectKey>
		INSERT INTO COMMUNITY_POST(BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_ONLY_MEMBERSHIP,
            <if test="fileGroupNo!=null and fileGroupNo!=''">
            FILE_GROUP_NO, 
            </if>
            BOARD_DELYN, BOARD_CREATE_DT

            , BOARD_ONLY_FAN

            , URL_CATEGORY, COM_PROFILE_NO, MEM_NO)
		VALUES(
		#{boardNo},#{boardTitle},#{boardContent},#{boardOnlyMembership}
		<if test="fileGroupNo!=null and fileGroupNo!=''">
		,#{fileGroupNo}
		</if>
		,'N',SYSDATE
		<if test="boardOnlyFan!=null and boardOnlyFan != ''">
		,#{boardOnlyFan}
		</if>
		<if test="boardOnlyFan==null or boardOnlyFan == ''">
		,'N'
		</if>
		,#{urlCategory},#{comProfileNo},#{memNo}
		)
	</insert>
	<!-- 게시물 수정하기 -->
	<update id="editBoard" parameterType="com.ohot.home.community.vo.CommunityPostVO">
	UPDATE  COMMUNITY_POST <!--com.ohot.home.community.mapper.CommunityMapper.editBoard  -->
	   SET  BOARD_TITLE= #{boardTitle},
		    BOARD_CONTENT=#{boardContent},
		    <if test="boardOnlyMembership !=null and boardOnlyMembership != ''">
		    BOARD_ONLY_MEMBERSHIP=#{boardOnlyMembership},
		    </if>		    
		    <if test="boardOnlyFan !=null and boardOnlyMembership !=''">
		    BOARD_ONLY_FAN=#{boardOnlyFan},
		    </if>
		    FILE_GROUP_NO=#{fileGroupNo}
	WHERE   BOARD_NO=#{boardNo}
	</update>
	
	<select id="replyList" parameterType="int" resultMap="ReplyMap">
		SELECT A.REPLY_NO, A.REPLY_CONTENT, A.REPLY_DELYN,  TO_CHAR(a.reply_create_dt,'YYYY-MM-DD HH24:MI:SS') AS REP_CREATE_DATE, A.BOARD_NO, A.ART_NO, A.MEM_NO,A.MEDIA_POST_NO, A.COM_PROFILE_NO
		,B.MEM_NO, B.COM_NM, B.COM_FILE_GROUP_NO, B.COM_JOIN_YMD, B.COM_DELYN, B.COM_AUTH, B.ART_GROUP_NO
        FROM COMMUNITY_REPLY A
        JOIN COMMUNITY_PROFILE B ON (A.COM_PROFILE_NO = B.COM_PROFILE_NO)
		WHERE 1=1
			AND	A.BOARD_NO = #{boardNo}
			AND A.REPLY_DELYN = 'N'
		ORDER BY A.REPLY_CREATE_DT DESC
	</select>
	<select id="boardLikeList" parameterType="int">
		SELECT C.MEM_NO
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
        JOIN COMMUNITY_PROFILE C ON(B.COM_PROFILE_NO = C.COM_PROFILE_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=0
	</select> 
	<select id="replyLikeList" parameterType="com.ohot.home.community.vo.CommunityReplyVO">
        SELECT C.MEM_NO
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
        JOIN COMMUNITY_PROFILE C ON(B.COM_PROFILE_NO = C.COM_PROFILE_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=#{replyNo}
	</select> 
	<select id="boardLikeCnt" parameterType="int">
		SELECT COUNT(B.LIKE_NO) AS BOARD_LIKE_CNT
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=0
	</select>
	<select id="replyLikeCnt" parameterType="com.ohot.home.community.vo.CommunityReplyVO">
		SELECT COUNT(B.LIKE_NO) AS REPLY_LIKE_CNT
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=#{replyNo}
	</select>
<!-- 	<select id="replyLikeList" parameterType="com.ohot.home.community.vo.CommunityReplyVO">
		SELECT B.LIKE_NO AS REPLY_LIKE_CNT,B.COM_PROFILE_NO,B.BOARD_NO,B.REPLY_NO
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=#{replyNo}
	</select>
	<select id="boardLikeList" parameterType="int" resultType="com.ohot.home.community.vo.LikeDetailVO">
		SELECT B.LIKE_NO AS REPLY_LIKE_CNT,B.COM_PROFILE_NO,B.BOARD_NO,B.REPLY_NO
		FROM COMMUNITY_POST A
		JOIN LIKE_DETAIL B ON(A.BOARD_NO = B.BOARD_NO)
		WHERE 1=1
		 AND   A.BOARD_NO=#{boardNo}
		 AND   B.REPLY_NO=0
	</select> -->
	<!-- 팔로우 yn merge문 -->
	<update id="followYn" >

	MERGE INTO FOLLOW_DETAIL LD
    USING (SELECT #{comProfileNo} AS COM_PROFILE_NO, #{followProfileNo} AS FOLLOW_PROFILE_NO FROM DUAL) T
    ON (LD.COM_PROFILE_NO = T.COM_PROFILE_NO AND LD.FOLLOW_PROFILE_NO = T.FOLLOW_PROFILE_NO)
    WHEN MATCHED THEN
    UPDATE SET LD.DEL_YN = 'Y'
    WHEN NOT MATCHED THEN

    INSERT (COM_PROFILE_NO, FOLLOW_PROFILE_NO) 
    VALUES (T.COM_PROFILE_NO, T.FOLLOW_PROFILE_NO) 
    
	</update>
	<delete id="followDelete">
	  DELETE FROM FOLLOW_DETAIL
      WHERE COM_PROFILE_NO = #{comProfileNo}
      AND FOLLOW_PROFILE_NO = #{followProfileNo}
      AND DEL_YN = 'Y'
	</delete>
	<update id="boardLikeYn" parameterType="com.ohot.home.community.vo.LikeDetailVO" >
	MERGE INTO LIKE_DETAIL LD
    USING (SELECT #{comProfileNo} AS COM_PROFILE_NO, #{boardNo} AS BOARD_NO FROM DUAL) T
    ON (LD.COM_PROFILE_NO = T.COM_PROFILE_NO AND LD.BOARD_NO = T.BOARD_NO)
    WHEN MATCHED THEN
    UPDATE SET LD.DEL_YN = 'Y'
    WHEN NOT MATCHED THEN
    <selectKey resultType="int" order="BEFORE" keyProperty="likeNo" >
			SELECT NVL(MAX(LIKE_NO),0)+1
			FROM LIKE_DETAIL
	</selectKey>
        INSERT (LIKE_NO,COM_PROFILE_NO, BOARD_NO) 
        VALUES (#{likeNo},T.COM_PROFILE_NO, T.BOARD_NO)
    
	</update>
	<delete id="boardLikeDelete" parameterType="com.ohot.home.community.vo.LikeDetailVO">
	DELETE 
    FROM LIKE_DETAIL
    WHERE COM_PROFILE_NO = #{comProfileNo}
      AND BOARD_NO = #{boardNo}
      AND DEL_YN = 'Y'
	</delete>
	<update id="replyLikeYn" parameterType="com.ohot.home.community.vo.LikeDetailVO" >
	MERGE INTO LIKE_DETAIL LD
    USING (SELECT #{comProfileNo} AS COM_PROFILE_NO, #{boardNo} AS BOARD_NO,#{replyNo} AS REPLY_NO FROM DUAL) T
    ON (LD.COM_PROFILE_NO = T.COM_PROFILE_NO AND LD.BOARD_NO = T.BOARD_NO AND LD.REPLY_NO = T.REPLY_NO)
    WHEN MATCHED THEN
    UPDATE SET LD.DEL_YN = 'Y'
    WHEN NOT MATCHED THEN
    <selectKey resultType="int" order="BEFORE" keyProperty="likeNo" >
			SELECT NVL(MAX(LIKE_NO),0)+1
			FROM LIKE_DETAIL
	</selectKey>
        INSERT (LIKE_NO,COM_PROFILE_NO, BOARD_NO,REPLY_NO) 
        VALUES (#{likeNo},T.COM_PROFILE_NO,T.BOARD_NO ,T.REPLY_NO)
    
	</update>
	<delete id="replyLikeDelete" parameterType="com.ohot.home.community.vo.LikeDetailVO">
	DELETE 
    FROM LIKE_DETAIL
    WHERE COM_PROFILE_NO = #{comProfileNo}
      AND BOARD_NO = #{boardNo}
      AND REPLY_NO = #{replyNo}
      AND DEL_YN = 'Y'
	</delete>


</mapper>