package com.ohot.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.ohot.admin.service.AdminGoodsService;
import com.ohot.service.ArtistGroupService;
import com.ohot.service.ArtistService;
import com.ohot.shop.vo.GoodsVO;
import com.ohot.shop.vo.TkDetailVO;
import com.ohot.vo.ArtistGroupVO;
import com.ohot.vo.ArtistVO;
import com.ohot.vo.FileDetailVO;
import com.ohot.vo.FileGroupVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/admin/goods")
public class AdminGoodsController {
	
	@Autowired
	AdminGoodsService adminGoodsService;
	
	@Autowired
	ArtistGroupService artistGroupService;
	
	@Autowired
	ArtistService artistService;

	//굿즈 등록
	
	//공연 리스트
	@GetMapping("/ticketList")
	public String ticketList(GoodsVO goodsVO, Model model) {
		log.info("ticketLsit->goodsVO: "+goodsVO);
		List<GoodsVO> goodsVOList = this.adminGoodsService.ticketList();
		model.addAttribute("goodsVOList", goodsVOList);
		
		
		
		return "admin/shop/test";
	}
	
	//티켓 등록
	@GetMapping("/ticketCreate")
	public String ticketCreate(ArtistGroupVO artistGroupVO, Model model) {
		log.info("ticketCreate->artistGroupVO: "+artistGroupVO);
		
		List<ArtistGroupVO> artistGroupVOList = this.artistGroupService.homeArtistGroupList();
		model.addAttribute("artistGroupVOList", artistGroupVOList);
		
		List<ArtistVO> artistVOList = this.artistService.artistList();
		model.addAttribute("artistVOList", artistVOList);
		
		return "admin/shop/ticketCreate";
	}
	
	@ResponseBody
	@PostMapping("/ticketCreatePost")
	public int ticketCreatePost( GoodsVO goodsVO , @RequestParam(value="uploadFile") MultipartFile[] uploadFiles) {
		
		log.info("ticketCreatePost-> goodsVO: "+goodsVO);
		
		int result = this.adminGoodsService.ticketInsert(goodsVO, uploadFiles);
		log.info("ticketcreate->result: "+result);
		
		return result;
	}
	
	@PostMapping("/ticketEventPost")
	public String ticketEventPost(@RequestBody List<TkDetailVO> tkDetailVOList) {
		log.info("ticketEventPost실행");
		
		for (TkDetailVO tkDetailVO : tkDetailVOList) {
			long tkNo =this.adminGoodsService.tkDetailInsert(tkDetailVO); // 서비스 호출
			log.info("ticketEventPost-> tkDetailVO: "+ tkDetailVO);
			return "admin/shop/ticketList?tkNo="+tkNo;
	    }
		
		
		return "에러다";
	}
	
	//티켓포스터 등록
	@ResponseBody
	@PostMapping("/ticketPosterPost")
	public FileDetailVO ticketPosterPost(@RequestParam(value="uploadFile") MultipartFile[] uploadFile) {
		FileDetailVO result=this.adminGoodsService.ticketPoster(uploadFile);
		log.info(result+"dddd");
		return result;
	}
	
	//포스터 이미지 뿌리기
	@ResponseBody
	@PostMapping("/ticketPosterImgPost")
	public FileDetailVO ticketPosterImgPost(long fileGroupNo) {
		
		FileDetailVO fileDetailVO = this.adminGoodsService.ticketPosterImg(fileGroupNo);
		log.info("ticketPosterImgPost->fileGroupVO: "+fileDetailVO);
		return fileDetailVO;
	}
	
}
