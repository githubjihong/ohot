<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

	
<style>
	#dmIcon {
	 line-height: 35px;
	 color: #F86D72;
	 position: fixed;
	 height:45px;
	 right: 70px;
	 bottom: 12px;
	 display: inline-flex;
	 align-items: center;
	 background: floralwhite;
	 border-radius: 50px;
	 padding: 3px 20px;
	 box-shadow: 0 2px 6px rgba(0,0,0,0.1);
	 font-family: sans-serif;
	 font-weight: bold;
	 border: 1px solid #e5e7eb;
	 z-index: 10;
	 cursor: pointer;
   }
   #dmList {
	   position: fixed;
	   overflow: hidden;
	   width:0;
	   height:0;
	   right: 70px;
	   bottom:11px;
	   background-color: white;
	   z-index: 5;
	   border-radius: 10px;
	   border: 1px solid #e5e7eb;
	   text-align: center;
	   color: #F86D72; 
	   transition: width 0.3s ease, height 0.3s ease;
   } 

   .dmIcon-circle {
	 width: 24px;
	 height: 24px;
	 background-color: #F86D72;
	 border-radius: 50%;
	 display: flex;
	 align-items: center;
	 justify-content: center;
	 margin-right: 8px;
   }
   .dmIcon-circle svg {
	 width: 14px;
	 height: 14px;
	 fill: white;
   }
   .dmIcon-text {
	 margin-right: 6px;
	 color: #F86D72;
   }


  .artist-name_dm {
    margin-top: 8px;
    font-size: 0.9rem;
    font-weight: 500;
  }


.artist-group_dm {
	margin-bottom: 30px;
}
.group-name_dm {
	font-size: 1.2em;
	font-weight: bold;
	color: #181818;
	margin-bottom: 10px;
	text-align: left;
}
.artist-list_dm {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
	list-style: none;
	padding: 0;
}
#dmnotice li{
	font-size: 12px;
	color: rgba(165, 165, 165, 0.701);
}


</style>
</head>
<body>
	<c:if test="${not empty userVO}">
	</c:if>
	<div>
		<c:if test="${not empty userVO}">
			<div class="dm-button" id="dmIcon"  onclick="toggleDm()">
		</c:if>
		<c:if test="${empty userVO}">
			<div class="dm-button" id="dmIcon"  onclick="alert('로그인 후 이용가능한 서비스입니다')">
		</c:if>
            <div class="dmIcon-circle">
            <svg viewBox="0 0 24 24">
                <path d="M2 21l21-9L2 3v7l15 2-15 2v7z"/>
            </svg>
            </div>
            <div class="dmIcon-text"> Message</div>
        </div>
	</div>

	<!-- dm List-->
	<div id="dmList" class="card p-3">
	
			<div class=" d-flex align-items-normal gap-3 flex-wrap ">
				
				<div class="tab" id="msgMainTab" style="width: 99%; ">
					<div class="row" style="position: sticky; top: 0; background-color: white;">
					  <div class="col-md-10 d-flex align-items-start"><h5><b>메세지 </b></h5><i class="bi bi-chat-heart" style="font-size: 1.2rem;"></i></div> 
					  <div class="col-md-1"></div>
					  <div class="col-md-1" style="text-align: end;" onclick="toggleDm()">
						<h4><i class="bi bi-chevron-bar-down" style="margin-right: 8px;"></i></h4>
					  </div>
					</div>
				  
					<div style="background-color: white; height: 590px; display: flex; border: 1px solid #ccc; border-radius: 5px;">
						<!-- 왼쪽 박스 -->
						<div id="fanMsgList" style="flex: 3; margin: 5px; border: 3px solid darkgray;border-radius: 20px; height: 98%; overflow-y:auto; padding: 10px;" >
							<div style="text-align: center;  display: flex; flex-direction: column; align-items: center; ">
								<div style="margin-bottom: 10px; margin-top: 50%;  background-color:azure; border:1px solid #F86D72; border-radius: 15px 10px 10px 0px; padding: 5px; width:50%; color:gray;">💗 @건 도착 💗</div>
								<div><h6>말풍선 클릭해 팬에게 온<br> 메세지를 확인해보세요</h6></div>
							</div>
						</div>
						<!-- 오른쪽 박스 -->
						<div style="flex: 4; margin: 5px;" id="chatRoom">
							<input type="hidden" id="dmSubNo" name="dmSubNo" value="\${dmSubNo}">
							<input type="hidden" id="msgSndrNo" name="msgSndrNo" value="\${memNo}">
							<div style="height: 100%; overflow-y:auto; display: flex; flex-direction: column;" id="dmMsgContent"></div>
						</div>
						
					</div>
						<div style="margin-top: 10px; display: flex; gap: 10px;">
							<input type="text" name="msgContent" id="msgContent" style="width: 88%; " onkeypress="if(event.key === 'Enter') dmSendMsgBtn()" placeholder="메세지를 입력하세요"  >
							<button type="button" class="btn btn-warning" id="sendDmMsg" onclick="dmSendMsgBtn()" >&ensp;<i class="bi bi-send-fill"></i>&ensp;</button>
						</div>
				  </div>
			</div>
	</div>
 

<script type="text/javascript">
const memNoDm = '${userVO.memberVO.memNo}';
const artNoDm = '${userVO.memberVO.artistVO.artNo}';
let stompClient = null;
let myFanRoomList=[];
let dmMsgContentContainer = document.querySelector("#dmMsgContent");

let isDmOpen = false;

function toggleDm() {
	if (isDmOpen) {
		// 닫기
		dmList.style.width = "0px";
		dmList.style.height = "0px";
		document.querySelector('#dmIcon').style.zIndex = 10;
		isDmOpen = false;
	} else {
		// 열기
		dmList.style.width = "700px";
		dmList.style.height = "700px";
		document.querySelector('#dmIcon').style.zIndex = 3;
		myFanListDm(); //팬리스트 가져오기
		myLastChatList(); //마지막 대화 가져오기
		connect(); //웹소켓 연결
		isDmOpen = true;


	}
}

let groupedFanMsgs = [];  // 팬 메시지 임시 그룹
let groupedMsgList = [];  // 모든 팬 메시지 그룹 저장
let groupedBalloonExists = false;  // 말풍선 존재 여부

function myLastChatList() {
	axios.post('/dm/lastChat?artNo=' + artNoDm + '&dmSubNo=0').then(resp => {
		// console.log("마지막 대화" + JSON.stringify(resp.data));

		const msgList = resp.data;
		const myMsgList = document.querySelector('#dmMsgContent');
		const fanMsgList = document.querySelector('#fanMsgList');

		msgList.forEach(chat => {
			if (chat.msgSndrNo == memNoDm) {
				// 아티스트 메시지 출력
				const li = document.createElement('div');
				li.style = "text-align:left; align-self: flex-end; margin-left:10%; margin-bottom: 5px; border:1px solid #F86D72; border-radius: 10px 15px 0px 10px; width-max:70%; padding: 5px; background-color: floralwhite;";
				li.innerHTML = chat.msgContent;
				myMsgList.appendChild(li);

				// 그 전에 팬 메시지 그룹이 있었다면 말풍선으로 표시
				if (groupedFanMsgs.length > 0) {
					// 저장해두기
					groupedMsgList.push([...groupedFanMsgs]); // 복사해서 저장
					
					const groupIndex = groupedMsgList.length - 1;
					const balloon = document.createElement('div');
					balloon.className = "groupBalloon";
					balloon.style = "text-align: center; margin-bottom: 5px; cursor: pointer; background-color:azure; border:1px solid #F86D72; border-radius: 15px 10px 10px 0px; padding: 5px; width:43%";
					balloon.innerHTML = `&ensp;💗 \${groupedFanMsgs.length}건 도착 💗`;
					balloon.id="clickedBalloon"+groupIndex;
					balloon.onclick = () => showGroupedMessages(groupIndex);
					myMsgList.appendChild(balloon);

					groupedFanMsgs = []; // 그룹 초기화
				}
			} else {
				// 팬 메시지라면 그룹에 추가
				groupedFanMsgs.push(chat);
			}

			myMsgList.scrollTop = myMsgList.scrollHeight;
		});

		// 마지막에 팬 메시지가 남아있다면 처리
		if (groupedFanMsgs.length > 0) {
			groupedMsgList.push([...groupedFanMsgs]);
			
			const groupIndex = groupedMsgList.length - 1;
			const balloon = document.createElement('div');
			balloon.className = "groupBalloon";
			balloon.style = "text-align: center; margin-bottom: 5px; cursor: pointer; background-color:azure; border:1px solid #F86D72; border-radius: 15px 10px 10px 0px; padding: 5px; width:43%";
			balloon.innerHTML = `&ensp;💗 \${groupedFanMsgs.length}건 도착 💗`;
			balloon.id="clickedBalloon"+groupIndex;
			balloon.onclick = () => showGroupedMessages(groupIndex);
			myMsgList.appendChild(balloon);

			groupedFanMsgs = [];
		}
	})
	.catch(error => {
		console.error("Error lastchatlist:", error);
	});
}

function showGroupedMessages(groupIndex) {
	const fanListBox = document.getElementById("fanMsgList");
	fanListBox.innerHTML = '';  // 기존 내용 지우기
	document.querySelectorAll('.groupBalloon').forEach(el => {
		el.style.backgroundColor = "azure";
	});
	document.querySelector('#clickedBalloon'+groupIndex).style.backgroundColor = "lightsteelblue"; // 말풍선 색상변경
	const msgs = groupedMsgList[groupIndex];
	msgs.forEach(msg => {
		const div = document.createElement('div');
		div.style = "text-align: left; margin-bottom: 10px; cursor: pointer; color:black; background-color:lightsteelblue; color:white; border:1px solid #F86D72; border-radius: 20px 10px 10px 0px; padding: 5px; width:95%";
		div.innerText = msg.msgSndrNo + ": " + msg.msgContent;
		fanListBox.appendChild(div);
	});

}

// function myLastChatList(){
// 	axios.post('/dm/lastChat?artNo='+artNoDm+'&dmSubNo=0').then(resp=>{
// 		console.log("마지막 대화"+JSON.stringify(resp.data));

// 		const msgList = resp.data;
// 		const myMsgList = document.querySelector('#dmMsgContent');
// 		const fanMsgList = document.querySelector('#fanMsgList');

// 		resp.data.forEach(chat => {
// 			const li = document.createElement('li');
// 			if(chat.msgSndrNo == memNo){
// 				li.style = "text-align: right; margin-bottom: 5px";
// 				li.innerHTML = chat.msgContent;
// 			}else{
// 				li.style = "text-align: left; margin-bottom: 5px";
// 				li.innerHTML = chat.msgSndrNo+" : "+chat.msgContent;
// 				// fanMsgList.appendChild(li);
// 			}
			
// 			myMsgList.appendChild(li);
			
// 			dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;
// 		});
// 	})
// 	.catch(error => {
// 		console.error("Error lastchatlist:", error);
// 	});

// }

function connect(){
	
	const socket = new SockJS("/ws/dm");
	stompClient = Stomp.over(socket);
    stompClient.connect({}, (frame) => {
		console.log("Connected :"+JSON.stringify(frame));

		//팬들의 채팅방구독
		myFanRoomList.forEach(fanRoom=>{
			// console.log(fanRoom.dmSubNo+"w하나씩?");
			stompClient.subscribe('/toArtist/dmRoom/'+fanRoom.dmSubNo, (message) => {
				const msg = JSON.parse(message.body);
				console.log("메세지 수신: "+msg);
				let fromOther =document.querySelector('#dmMsgContent');
				let currentOpenGroupIndex = null;

				// 메시지 저장
				groupedFanMsgs.push(msg);

				// 풍선 찾기
				const groupIndex = groupedMsgList.length ;
				let balloon = document.querySelector('.pendingBalloon');
				
				groupedMsgList[groupIndex]=groupedFanMsgs;

				// 풍선이 없으면 생성
				if (!balloon) {
					// alert("풍선이 없어서 생성합니다.");
					balloon = document.createElement('div');
					balloon.id = "clickedBalloon"+groupIndex;
					balloon.className = "groupBalloon pendingBalloon";
					balloon.onclick = () => {
						showGroupedMessages(groupIndex);
						currentOpenGroupIndex = groupIndex; // 현재 열려있는 그룹 저장
					}
					balloon.style = `
						text-align: center;
						margin-bottom: 5px;
						cursor: pointer;
						background-color: azure;
						border: 1px solid #F86D72;
						border-radius: 15px 10px 10px 0px;
						padding: 5px;
						width: 43%;
					`;
					
					fromOther.appendChild(balloon);
					groupedBalloonExists = true;
				}
				
				// 풍선 텍스트 업데이트
				balloon.innerHTML = `&ensp;💗 \${groupedFanMsgs.length}건 도착 💗`;

				// ✅ 클릭된 말풍선이면 왼쪽 채팅창에 즉시 출력
				if (currentOpenGroupIndex === groupIndex) {
					const fanListBox = document.getElementById("fanMsgList");
					const div = document.createElement('div');
					div.style = "text-align: left; margin-bottom: 10px; cursor: pointer; color:black; background-color:lightsteelblue; color:white; border:1px solid #F86D72; border-radius: 20px 10px 10px 0px; padding: 5px; width:95%";
					div.innerText = msg.msgSndrNo + ": " + msg.msgContent;
					fanListBox.appendChild(div);
					// showMessage 함수를 가정: 왼쪽 영역에 메시지 추가
					showMessage(msg); 
				}

				if(groupedFanMsgs.length>50){
					groupedFanMsgs = [];
					groupedBalloonExists = flase;
				}

				dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;

			});
		})

    });
}



function myFanListDm(){
	axios.post('/dm/myFanList?artNo='+artNoDm).then(resp=>{
		console.log("나를 구독한 팬리스트"+JSON.stringify(resp.data));

		myFanRoomList = resp.data;

	})
}


function dmSendMsgBtn(){
	event.preventDefault();

    const msgContent = document.getElementById("msgContent").value;

    if (!msgContent.trim()) {
        alert("메세지를 입력하세요.");
        return;
    }

    // 보내는 메시지 객체 (DmMsgVO랑 맞춰야 함)
	myFanRoomList.forEach(fanRoom=>{
		
		const message = {
			"dmSubNo": fanRoom.dmSubNo,
			"msgSndrNo": memNoDm,
			"msgContent": msgContent,
			"artNo": artNoDm
		};
		// 메시지 전송
		stompClient.send("/app/dm/msgByArtist", {}, JSON.stringify(message));
	});

	//화면출력
	document.querySelector('#dmMsgContent').innerHTML+=`
		<div style="text-align:left; align-self: flex-end; margin-left:10%; margin-bottom: 5px; border:1px solid #F86D72; border-radius: 10px 15px 0px 10px;
			width-max:70%; padding: 5px; background-color: floralwhite;">\${msgContent}</div>`;
	dmMsgContentContainer.scrollTop = dmMsgContentContainer.scrollHeight;

	

    // 입력창 비우기
    document.getElementById("msgContent").value = "";


}


</script> 
</body>  
</html>