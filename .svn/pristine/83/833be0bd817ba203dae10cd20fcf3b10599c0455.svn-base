package com.ohot.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ohot.admin.service.AdminReportService;
import com.ohot.util.BoardPage;
import com.ohot.vo.MemberVO;
import com.ohot.vo.ReportmanageVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller("AdminReportmanageController")
@RequestMapping("/admin/reportmanage")
public class AdminReportmanageController {
	
	@Autowired AdminReportService adminReportService;
	@GetMapping("/reportList") 
	public String reportList( 
			Model model,ReportmanageVO reportmanageVO,
	@RequestParam(value="reportType", defaultValue = "", required = false) String reportType,
	@RequestParam(value="currentPage", defaultValue = "1", required = false) int currentPage,
	@RequestParam(value="mode", defaultValue = "", required = false) String mode,
	@RequestParam(value="keyword", defaultValue = "", required = false) String keyword){
	
	int size = 10;
	
	Map<String, Object> map = new HashMap<>();
	map.put("currentPage", currentPage); map.put("mode", mode);
	map.put("keyword", keyword); map.put("size", size);
	map.put("currentPage", currentPage);
	map.put("size", size);
	map.put("mediaDelYn", "N");
	
	int total = this.adminReportService.getTotalReport(map);
	
	List<ReportmanageVO> reportVOList = this.adminReportService.reportSearchList(map);
	
	List<ReportmanageVO> ReportManageList = this.adminReportService.ReportManageList(reportmanageVO);
	log.info("ReportManageList=============================== : " + ReportManageList);
	
	for(int i=0; i<ReportManageList.size(); i++) {
		log.info("ReportManageList=============================== : " + ReportManageList.get(i));
	}
	
	model.addAttribute("ReportManageList",ReportManageList);
	model.addAttribute("boardPage", new BoardPage<>(total, currentPage, size, keyword, reportVOList, mode));
	model.addAttribute("reportType", reportType);
	model.addAttribute("currentPage", currentPage);
	model.addAttribute("size", size);
	model.addAttribute("mode", mode);
	model.addAttribute("keyword", keyword);
	model.addAttribute("reportmanageVO", reportmanageVO);
	model.addAttribute("reportPostNo", reportmanageVO.getReportPostNo());
	model.addAttribute("reportResult", reportmanageVO.getReportResult());
	
	
	log.info("ReportManageList======================: " + ReportManageList);
	
	
	
	return "/admin/reportmanage/reportList"; 
	
	}
	@ResponseBody
	@GetMapping("/reportmanageDetail")
	public ReportmanageVO detail( @RequestParam(value="reportPostNo",required=true) int reportPostNo,
	         					@ModelAttribute(value="reportmanageVO") ReportmanageVO reportmanageVO,
	         					 Map<String,Object> map
	         			       	){
		//reportmanageVO : ReportmanageVO(reportPostNo=3..
		log.info("edit-> reportmanageVO : " + reportmanageVO);
		
		//신고 상세페이지
		reportmanageVO = this.adminReportService.getReportById(reportmanageVO);
	
		log.info("edit-> reportmanageVO : " + reportmanageVO);
		

		
		return reportmanageVO;
	}
	
	
	//신고글에 대한 관리자의 처리
	 @ResponseBody
	 @PostMapping("/reportmanageDetailPost") 
	 public String detailPost(ReportmanageVO reportmanageVO) {
		 // ReportmanageVO(reportPostNo=3, .. reportResult=002,...
		 log.info("detailPost->reportmanageVO : " + reportmanageVO);
		 
		 int result = this.adminReportService.reportUpdate(reportmanageVO);
		 log.info("detailPost->result" + result);
		 
		 //http://localhost:28080/admin/reportmanage/reportList
		 return "success";
	 
	 }
	 
	 @ResponseBody
	 @PostMapping("/reportmanageDelete")
	 public String reportmanageDelete(@RequestParam(value="reportPostNo") int reportPostNo) {
		 log.info("reportmanageDelete->reportPostNo : " + reportPostNo);
		 
		 int cnt = this.adminReportService.reportDelete(reportPostNo);
		 log.info("reportmanageDelete->result" + cnt);
		 
		 String result = "";
			if(cnt == 1) {
				result = "success";
			}else result = "fail";
			
		 
		 return "result";
	 }
}

