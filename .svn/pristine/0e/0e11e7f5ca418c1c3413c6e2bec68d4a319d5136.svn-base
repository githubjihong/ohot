package com.ohot.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.ohot.mapper.UsersMapper;
import com.ohot.vo.CustomUser;
import com.ohot.vo.UsersVO;

import jakarta.servlet.http.HttpServletRequest;
import lombok.extern.slf4j.Slf4j;

@Slf4j
// UserDetailService가 스프링 시큐리티에서 제공하는 interface
@Service
public class UserDetailsServiceImpl implements UserDetailsService{

	@Autowired
	UsersMapper usersMapper;
	
	
	//MVC에서는 Controller로 리턴하지 않고, "CustomUser"로 리턴함
	//CustomUser : 사용자 정의 유저 정보. extends User를 상속받고 있음
	//2) 스프링 시큐리티의 User 객체의 정보로 넣어줌 => 프링이가 이제부터 해당 유저를 관리
	//User : 스프링 시큐리에서 제공해주는 사용자 정보 클래스
	/*
	 usersVO(우리) -> user(시큐리티)
	 -----------------
	 userMail  -> username
	 userPwsd  -> password
	 enabled   -> enabled
	 auth      -> authorities
	 */
	@Override
	public UserDetails loadUserByUsername(String userMail) throws UsernameNotFoundException {
		// 시큐리티에서는 username인데 편의상 memEmail로 변경함
		log.info("UserDetailsServiceImpl -> userMail : {}", userMail);
		
		// 요청 URL
		HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();
		String requestURL = request.getRequestURI();
		log.info("UserDetailsServiceImpl -> requestURL : " + requestURL);
		
		// 이메일로 회원검색
		UsersVO usersVO = usersMapper.findByEmail(userMail);
		log.info("UserDetailsServiceImpl -> usersVO : " + usersVO);
		
		if(usersVO == null) {
			throw new UsernameNotFoundException("EMAIL_NOT_FOUND");
		}
		
		String snsYn = usersVO.getSnsYn();
		log.info("snsYn : " + snsYn);
		
		// 간편가입 회원일 경우 -> 간편로그인 시도 alert
		if(snsYn.equals("Y")) {
			
			throw new UsernameNotFoundException("SNS_MEMBER");
		}
		
		// 서비스 회원가입자일 경우 -> 로그인 성공
		return new CustomUser(usersVO);
		
	}
	
}
